#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// lejos.hardware.port.MotorPort
	c0 [label=<<table title="lejos.hardware.port.MotorPort" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MotorPort </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + A : String </td></tr>
<tr><td align="left" balign="left"> + B : String </td></tr>
<tr><td align="left" balign="left"> + C : String </td></tr>
<tr><td align="left" balign="left"> + D : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.port.SensorPort
	c1 [label=<<table title="lejos.hardware.port.SensorPort" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SensorPort </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + S1 : String </td></tr>
<tr><td align="left" balign="left"> + S2 : String </td></tr>
<tr><td align="left" balign="left"> + S3 : String </td></tr>
<tr><td align="left" balign="left"> + S4 : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.BaseMotor
	c2 [label=<<table title="lejos.robotics.BaseMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> BaseMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + forward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + backward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + stop() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + coast() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + brake() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + hold() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isMoving() : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Calibrate
	c3 [label=<<table title="lejos.robotics.Calibrate" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Calibrate </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + startCalibration() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + stopCalibration() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Color
	c4 [label=<<table title="lejos.robotics.Color" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Color </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RED : int </td></tr>
<tr><td align="left" balign="left"> + GREEN : int </td></tr>
<tr><td align="left" balign="left"> + BLUE : int </td></tr>
<tr><td align="left" balign="left"> + YELLOW : int </td></tr>
<tr><td align="left" balign="left"> + MAGENTA : int </td></tr>
<tr><td align="left" balign="left"> + ORANGE : int </td></tr>
<tr><td align="left" balign="left"> + WHITE : int </td></tr>
<tr><td align="left" balign="left"> + BLACK : int </td></tr>
<tr><td align="left" balign="left"> + PINK : int </td></tr>
<tr><td align="left" balign="left"> + GRAY : int </td></tr>
<tr><td align="left" balign="left"> + LIGHT_GRAY : int </td></tr>
<tr><td align="left" balign="left"> + DARK_GRAY : int </td></tr>
<tr><td align="left" balign="left"> + CYAN : int </td></tr>
<tr><td align="left" balign="left"> + BROWN : int </td></tr>
<tr><td align="left" balign="left"> + NONE : int </td></tr>
<tr><td align="left" balign="left"> - red : int </td></tr>
<tr><td align="left" balign="left"> - blue : int </td></tr>
<tr><td align="left" balign="left"> - green : int </td></tr>
<tr><td align="left" balign="left"> - color : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Color(red : int, green : int, blue : int) </td></tr>
<tr><td align="left" balign="left"> + Color(red : int, green : int, blue : int, color : int) </td></tr>
<tr><td align="left" balign="left"> + getRed() : int </td></tr>
<tr><td align="left" balign="left"> + getGreen() : int </td></tr>
<tr><td align="left" balign="left"> + getBlue() : int </td></tr>
<tr><td align="left" balign="left"> + getColor() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.ColorIdentifier
	c5 [label=<<table title="lejos.robotics.ColorIdentifier" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ColorIdentifier </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getColorID() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.DCMotor
	c6 [label=<<table title="lejos.robotics.DCMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> DCMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setPower(power : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getPower() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Encoder
	c7 [label=<<table title="lejos.robotics.Encoder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Encoder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTachoCount() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + resetTachoCount() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.LampController
	c8 [label=<<table title="lejos.robotics.LampController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> LampController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setFloodlight(floodlight : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isFloodlightOn() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getFloodlight() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setFloodlight(color : int) : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.RegulatedMotor
	c9 [label=<<table title="lejos.robotics.RegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : int, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateTo(limitAngle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateTo(limitAngle : int, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setSpeed(speed : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getSpeed() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isStalled() : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.SampleProvider
	c10 [label=<<table title="lejos.robotics.SampleProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SampleProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + sampleSize() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + fetchSample(sample : float[], offset : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Tachometer
	c11 [label=<<table title="lejos.robotics.Tachometer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Tachometer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRotationSpeed() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.AbstractCalibrationFilter
	c12 [label=<<table title="lejos.robotics.filter.AbstractCalibrationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractCalibrationFilter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # lowPassFilter : LowPassFilter </td></tr>
<tr><td align="left" balign="left"> # min : float[] </td></tr>
<tr><td align="left" balign="left"> # max : float[] </td></tr>
<tr><td align="left" balign="left"> # sum : float[] </td></tr>
<tr><td align="left" balign="left"> # calibrating : boolean </td></tr>
<tr><td align="left" balign="left"> - DIRECTORY : String </td></tr>
<tr><td align="left" balign="left"> - EXT : String </td></tr>
<tr><td align="left" balign="left"> - props : Properties </td></tr>
<tr><td align="left" balign="left"> # numberOfSamplesInCalibration : int </td></tr>
<tr><td align="left" balign="left"> - timeConstant : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractCalibrationFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + setTimeConstant(timeConstant : float) </td></tr>
<tr><td align="left" balign="left"> + startCalibration() </td></tr>
<tr><td align="left" balign="left"> + stopCalibration() </td></tr>
<tr><td align="left" balign="left"> + suspendCalibration() </td></tr>
<tr><td align="left" balign="left"> + resumeCalibration() </td></tr>
<tr><td align="left" balign="left"> - getFile(filename : String) : File </td></tr>
<tr><td align="left" balign="left"> # load(filename : String) </td></tr>
<tr><td align="left" balign="left"> # store(filename : String) </td></tr>
<tr><td align="left" balign="left"> # getPropertyArray(key : String) : float[] </td></tr>
<tr><td align="left" balign="left"> # setPropertyArray(key : String, values : float[]) </td></tr>
<tr><td align="left" balign="left"> # setProperty(key : String, value : float) </td></tr>
<tr><td align="left" balign="left"> # getProperty(key : String) : float </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.AbstractCalibrationFilter.CalibrationFileException
	c13 [label=<<table title="lejos.robotics.filter.AbstractCalibrationFilter.CalibrationFileException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CalibrationFileException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CalibrationFileException(string : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.AbstractFilter
	c14 [label=<<table title="lejos.robotics.filter.AbstractFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractFilter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # source : SampleProvider </td></tr>
<tr><td align="left" balign="left"> # sampleSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.ConcatenationFilter
	c15 [label=<<table title="lejos.robotics.filter.ConcatenationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ConcatenationFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - source1 : SampleProvider </td></tr>
<tr><td align="left" balign="left"> - source2 : SampleProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConcatenationFilter(source1 : SampleProvider, source2 : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.FilterTerminal
	c16 [label=<<table title="lejos.robotics.filter.FilterTerminal" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FilterTerminal </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - source : SampleProvider </td></tr>
<tr><td align="left" balign="left"> - index : int </td></tr>
<tr><td align="left" balign="left"> - sample : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FilterTerminal(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + setIndex(index : int) </td></tr>
<tr><td align="left" balign="left"> + isFalse() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTrue() : boolean </td></tr>
<tr><td align="left" balign="left"> + fetch() : float </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.IntegrationFilter
	c17 [label=<<table title="lejos.robotics.filter.IntegrationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> IntegrationFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - lastTime : long </td></tr>
<tr><td align="left" balign="left"> - currentValue : float[] </td></tr>
<tr><td align="left" balign="left"> - NANO : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + IntegrationFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + resetTo(value : float) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.LinearCalibrationFilter
	c18 [label=<<table title="lejos.robotics.filter.LinearCalibrationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LinearCalibrationFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OFFSET_CALIBRATION : int </td></tr>
<tr><td align="left" balign="left"> + OFFSET_AND_SCALE_CALIBRATION : int </td></tr>
<tr><td align="left" balign="left"> - lowerBound : float[] </td></tr>
<tr><td align="left" balign="left"> - upperBound : float[] </td></tr>
<tr><td align="left" balign="left"> - offset : float[] </td></tr>
<tr><td align="left" balign="left"> - scale : float[] </td></tr>
<tr><td align="left" balign="left"> - calibrationType : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LinearCalibrationFilter(source : SampleProvider, filename : String) </td></tr>
<tr><td align="left" balign="left"> + LinearCalibrationFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + setScaleCalibration(ulBound : float) </td></tr>
<tr><td align="left" balign="left"> + setScaleCalibration(lBound : float, uBound : float) </td></tr>
<tr><td align="left" balign="left"> + setScaleCalibration(lBound : float[], uBound : float[]) </td></tr>
<tr><td align="left" balign="left"> + setOffsetCalibration(offset : float) </td></tr>
<tr><td align="left" balign="left"> + setOffsetCalibration(offset : float[]) </td></tr>
<tr><td align="left" balign="left"> + setCalibrationType(calibrationType : int) </td></tr>
<tr><td align="left" balign="left"> + getCallibrationType() : int </td></tr>
<tr><td align="left" balign="left"> + getOffsetCorrection() : float[] </td></tr>
<tr><td align="left" balign="left"> + getScaleCorrection() : float[] </td></tr>
<tr><td align="left" balign="left"> + startCalibration() </td></tr>
<tr><td align="left" balign="left"> + stopCalibration() </td></tr>
<tr><td align="left" balign="left"> + save(filename : String) </td></tr>
<tr><td align="left" balign="left"> + open(name : String) </td></tr>
<tr><td align="left" balign="left"> - reset() </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + getCalibrationType() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.LowPassFilter
	c19 [label=<<table title="lejos.robotics.filter.LowPassFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LowPassFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ smoothed : float[] </td></tr>
<tr><td align="left" balign="left"> ~ lastTime : long </td></tr>
<tr><td align="left" balign="left"> ~ timeConstant : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LowPassFilter(source : SampleProvider, timeConstant : float) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + setTimeConstant(timeConstant : float) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.MaximumFilter
	c20 [label=<<table title="lejos.robotics.filter.MaximumFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MaximumFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ max : float[] </td></tr>
<tr><td align="left" balign="left"> ~ buf : float[] </td></tr>
<tr><td align="left" balign="left"> ~ oldest : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MaximumFilter(source : SampleProvider, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.MeanFilter
	c21 [label=<<table title="lejos.robotics.filter.MeanFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MeanFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MeanFilter(source : SampleProvider, length : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.MedianFilter
	c22 [label=<<table title="lejos.robotics.filter.MedianFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MedianFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MedianFilter(source : SampleProvider, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.MinimumFilter
	c23 [label=<<table title="lejos.robotics.filter.MinimumFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MinimumFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ min : float[] </td></tr>
<tr><td align="left" balign="left"> ~ buf : float[] </td></tr>
<tr><td align="left" balign="left"> ~ oldest : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MinimumFilter(source : SampleProvider, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.ModulusFilter
	c24 [label=<<table title="lejos.robotics.filter.ModulusFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ModulusFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - zeroValue : float[] </td></tr>
<tr><td align="left" balign="left"> ~ sample : float[] </td></tr>
<tr><td align="left" balign="left"> ~ modulus : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ModulusFilter(source : SampleProvider, zeroValue : float[], modulus : float) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.OffsetCorrectionFilter
	c25 [label=<<table title="lejos.robotics.filter.OffsetCorrectionFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OffsetCorrectionFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ offset : float[] </td></tr>
<tr><td align="left" balign="left"> ~ reference : float[] </td></tr>
<tr><td align="left" balign="left"> - mean : float[] </td></tr>
<tr><td align="left" balign="left"> - m2 : float[] </td></tr>
<tr><td align="left" balign="left"> - actual : float[] </td></tr>
<tr><td align="left" balign="left"> - buffer : Queue&lt;Float&gt;[] </td></tr>
<tr><td align="left" balign="left"> - bufferSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OffsetCorrectionFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + OffsetCorrectionFilter(source : SampleProvider, reference : float[]) </td></tr>
<tr><td align="left" balign="left"> + OffsetCorrectionFilter(source : SampleProvider, reference : float[], bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> - updateStatistics() </td></tr>
<tr><td align="left" balign="left"> - withinLimits(i : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - addSample(i : int) </td></tr>
<tr><td align="left" balign="left"> - removeSample(i : int) </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> - getVariance(i : int) : float </td></tr>
<tr><td align="left" balign="left"> - getStandardDeviation(i : int) : float </td></tr>
<tr><td align="left" balign="left"> + getMean() : float[] </td></tr>
<tr><td align="left" balign="left"> + getStandardDeviation() : float[] </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.PublishedSource
	c26 [label=<<table title="lejos.robotics.filter.PublishedSource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PublishedSource </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # MAX_PACKET_SIZE : int </td></tr>
<tr><td align="left" balign="left"> # PUBLISH_PORT : int </td></tr>
<tr><td align="left" balign="left"> # SOCKET_TIMEOUT : int </td></tr>
<tr><td align="left" balign="left"> # MAX_AGE : int </td></tr>
<tr><td align="left" balign="left"> # MAX_SAMPLE_MESSAGE_SIZE : int </td></tr>
<tr><td align="left" balign="left"> - listener : PublishedSource.Listener </td></tr>
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # sampleSize : int </td></tr>
<tr><td align="left" balign="left"> # sample : float[] </td></tr>
<tr><td align="left" balign="left"> # frequency : float </td></tr>
<tr><td align="left" balign="left"> # host : String </td></tr>
<tr><td align="left" balign="left"> # port : int </td></tr>
<tr><td align="left" balign="left"> # timeStamp : long </td></tr>
<tr><td align="left" balign="left"> # formatter : DateFormat </td></tr>
<tr><td align="left" balign="left"> # ipAddress : String </td></tr>
<tr><td align="left" balign="left"> # socket : Socket </td></tr>
<tr><td align="left" balign="left"> # dis : DataInputStream </td></tr>
<tr><td align="left" balign="left"> - sources : Map&lt;String, PublishedSource&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PublishedSource(ipAddress : String, message : byte[]) </td></tr>
<tr><td align="left" balign="left"> + connect() : SubscribedProvider </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getFrequency() : float </td></tr>
<tr><td align="left" balign="left"> + getHost() : String </td></tr>
<tr><td align="left" balign="left"> + getTime() : String </td></tr>
<tr><td align="left" balign="left"> + getKey() : String </td></tr>
<tr><td align="left" balign="left"> + getIpAddress() : String </td></tr>
<tr><td align="left" balign="left"> + getPort() : int </td></tr>
<tr><td align="left" balign="left"> + getTimeStamp() : long </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + getSources() : Collection&lt;PublishedSource&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.PublishedSource.Listener
	c27 [label=<<table title="lejos.robotics.filter.PublishedSource.Listener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Listener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Listener() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SampleBuffer
	c28 [label=<<table title="lejos.robotics.filter.SampleBuffer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> SampleBuffer </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ bufferSize : int </td></tr>
<tr><td align="left" balign="left"> ~ actualSize : int </td></tr>
<tr><td align="left" balign="left"> ~ currentPos : int </td></tr>
<tr><td align="left" balign="left"> ~ sampleBuffer : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SampleBuffer(source : SampleProvider, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + getBufferSize() : int </td></tr>
<tr><td align="left" balign="left"> - reset() </td></tr>
<tr><td align="left" balign="left"> ~ toPos(i : int, index : int) : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> # getOldest(sample : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> # getActualSize() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SampleThread
	c29 [label=<<table title="lejos.robotics.filter.SampleThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SampleThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ buffer : float[] </td></tr>
<tr><td align="left" balign="left"> ~ running : boolean </td></tr>
<tr><td align="left" balign="left"> - sampleRate : float </td></tr>
<tr><td align="left" balign="left"> ~ interval : int </td></tr>
<tr><td align="left" balign="left"> ~ newSampleAvailable : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SampleThread(source : SampleProvider, sampleRate : float) </td></tr>
<tr><td align="left" balign="left"> + isNewSampleAvailable() : boolean </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + getSampleRate() : float </td></tr>
<tr><td align="left" balign="left"> + setSampleRate(rate : float) </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SampleThread.Runner
	c30 [label=<<table title="lejos.robotics.filter.SampleThread.Runner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Runner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Runner() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SliceFilter
	c31 [label=<<table title="lejos.robotics.filter.SliceFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SliceFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - firstIndex : int </td></tr>
<tr><td align="left" balign="left"> - lastIndex : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SliceFilter(source : SampleProvider, firstIndex : int, lastIndex : int) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SubscribedProvider
	c32 [label=<<table title="lejos.robotics.filter.SubscribedProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SubscribedProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # formatter : DateFormat </td></tr>
<tr><td align="left" balign="left"> - sampleSize : int </td></tr>
<tr><td align="left" balign="left"> - latest : float[] </td></tr>
<tr><td align="left" balign="left"> - source : PublishedSource </td></tr>
<tr><td align="left" balign="left"> - dis : DataInputStream </td></tr>
<tr><td align="left" balign="left"> - timeStamp : long </td></tr>
<tr><td align="left" balign="left"> - host : String </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - active : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SubscribedProvider(dis : DataInputStream, source : PublishedSource) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getSource() : PublishedSource </td></tr>
<tr><td align="left" balign="left"> + getHost() : String </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getTimeStamp() : long </td></tr>
<tr><td align="left" balign="left"> + isActive() : boolean </td></tr>
<tr><td align="left" balign="left"> + getTime() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SumFilter
	c33 [label=<<table title="lejos.robotics.filter.SumFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SumFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - worker : SampleBuffer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SumFilter(source : SampleProvider, length : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> # getActualSize() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SumFilter.PlainSum
	c34 [label=<<table title="lejos.robotics.filter.SumFilter.PlainSum" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PlainSum </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ latest : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - PlainSum(source : SampleProvider, length : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SumFilter.SmartSum
	c35 [label=<<table title="lejos.robotics.filter.SumFilter.SmartSum" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SmartSum </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ sum : float[] </td></tr>
<tr><td align="left" balign="left"> ~ oldest : float[] </td></tr>
<tr><td align="left" balign="left"> ~ latest : float[] </td></tr>
<tr><td align="left" balign="left"> ~ notRecalculated : int[] </td></tr>
<tr><td align="left" balign="left"> ~ recalculateIn : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SmartSum(source : SampleProvider, length : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> - recalculateSum(index : int) : float </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.ZeroFilter
	c36 [label=<<table title="lejos.robotics.filter.ZeroFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ZeroFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - zeroValue : float[] </td></tr>
<tr><td align="left" balign="left"> ~ sample : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ZeroFilter(source : SampleProvider, zeroValue : float[]) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.Delay
	c37 [label=<<table title="lejos.utility.Delay" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Delay </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Delay() </td></tr>
<tr><td align="left" balign="left"> + msDelay(period : long) </td></tr>
<tr><td align="left" balign="left"> + usDelay(period : long) </td></tr>
<tr><td align="left" balign="left"> + nsDelay(period : long) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//lejos.robotics.DCMotor implements lejos.robotics.BaseMotor
	c2:p -> c6:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.RegulatedMotor implements lejos.robotics.BaseMotor
	c2:p -> c9:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.RegulatedMotor implements lejos.robotics.Tachometer
	c11:p -> c9:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.Tachometer implements lejos.robotics.Encoder
	c7:p -> c11:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.AbstractCalibrationFilter extends lejos.robotics.filter.AbstractFilter
	c14:p -> c12:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.AbstractCalibrationFilter implements lejos.robotics.Calibrate
	c3:p -> c12:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.AbstractCalibrationFilter.CalibrationFileException extends java.lang.RuntimeException
	c38:p -> c13:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.AbstractFilter implements lejos.robotics.SampleProvider
	c10:p -> c14:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.ConcatenationFilter implements lejos.robotics.SampleProvider
	c10:p -> c15:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.IntegrationFilter extends lejos.robotics.filter.AbstractFilter
	c14:p -> c17:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.LinearCalibrationFilter extends lejos.robotics.filter.AbstractCalibrationFilter
	c12:p -> c18:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.LowPassFilter extends lejos.robotics.filter.AbstractFilter
	c14:p -> c19:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.MaximumFilter extends lejos.robotics.filter.SampleBuffer
	c28:p -> c20:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.MeanFilter extends lejos.robotics.filter.SumFilter
	c33:p -> c21:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.MedianFilter extends lejos.robotics.filter.SampleBuffer
	c28:p -> c22:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.MinimumFilter extends lejos.robotics.filter.SampleBuffer
	c28:p -> c23:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.ModulusFilter extends lejos.robotics.filter.AbstractFilter
	c14:p -> c24:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.OffsetCorrectionFilter extends lejos.robotics.filter.AbstractFilter
	c14:p -> c25:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.PublishedSource.Listener extends java.lang.Thread
	c39:p -> c27:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SampleBuffer extends lejos.robotics.filter.AbstractFilter
	c14:p -> c28:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SampleThread extends lejos.robotics.filter.AbstractFilter
	c14:p -> c29:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SampleThread.Runner extends java.lang.Thread
	c39:p -> c30:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SliceFilter extends lejos.robotics.filter.AbstractFilter
	c14:p -> c31:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SubscribedProvider implements lejos.robotics.SampleProvider
	c10:p -> c32:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.SumFilter extends lejos.robotics.filter.AbstractFilter
	c14:p -> c33:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SumFilter.PlainSum extends lejos.robotics.filter.SampleBuffer
	c28:p -> c34:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SumFilter.SmartSum extends lejos.robotics.filter.SampleBuffer
	c28:p -> c35:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.ZeroFilter extends lejos.robotics.filter.AbstractFilter
	c14:p -> c36:p [dir=back,arrowtail=empty];
	// java.lang.Thread
	c39 [label=<<table title="java.lang.Thread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Thread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Thread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - name : char[] </td></tr>
<tr><td align="left" balign="left"> - priority : int </td></tr>
<tr><td align="left" balign="left"> - threadQ : Thread </td></tr>
<tr><td align="left" balign="left"> - eetop : long </td></tr>
<tr><td align="left" balign="left"> - single_step : boolean </td></tr>
<tr><td align="left" balign="left"> - daemon : boolean </td></tr>
<tr><td align="left" balign="left"> - stillborn : boolean </td></tr>
<tr><td align="left" balign="left"> - target : Runnable </td></tr>
<tr><td align="left" balign="left"> - group : ThreadGroup </td></tr>
<tr><td align="left" balign="left"> - contextClassLoader : ClassLoader </td></tr>
<tr><td align="left" balign="left"> - inheritedAccessControlContext : AccessControlContext </td></tr>
<tr><td align="left" balign="left"> - threadInitNumber : int </td></tr>
<tr><td align="left" balign="left"> ~ threadLocals : ThreadLocal.ThreadLocalMap </td></tr>
<tr><td align="left" balign="left"> ~ inheritableThreadLocals : ThreadLocal.ThreadLocalMap </td></tr>
<tr><td align="left" balign="left"> - stackSize : long </td></tr>
<tr><td align="left" balign="left"> - nativeParkEventPointer : long </td></tr>
<tr><td align="left" balign="left"> - tid : long </td></tr>
<tr><td align="left" balign="left"> - threadSeqNumber : long </td></tr>
<tr><td align="left" balign="left"> - threadStatus : int </td></tr>
<tr><td align="left" balign="left"> ~ parkBlocker : Object </td></tr>
<tr><td align="left" balign="left"> - blocker : Interruptible </td></tr>
<tr><td align="left" balign="left"> - blockerLock : Object </td></tr>
<tr><td align="left" balign="left"> + MIN_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> + NORM_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> + MAX_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> - EMPTY_STACK_TRACE : StackTraceElement[] </td></tr>
<tr><td align="left" balign="left"> - SUBCLASS_IMPLEMENTATION_PERMISSION : RuntimePermission </td></tr>
<tr><td align="left" balign="left"> - uncaughtExceptionHandler : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> - defaultUncaughtExceptionHandler : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomSeed : long </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomProbe : int </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomSecondarySeed : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Thread() </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : Runnable) </td></tr>
<tr><td align="left" balign="left"> ~ Thread(arg0 : Runnable, arg1 : AccessControlContext) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : Runnable, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long) </td></tr>
<tr><td align="left" balign="left"> - registerNatives() </td></tr>
<tr><td align="left" balign="left"> - nextThreadNum() : int </td></tr>
<tr><td align="left" balign="left"> - nextThreadID() : long </td></tr>
<tr><td align="left" balign="left"> ~ blockedOn(arg0 : Interruptible) </td></tr>
<tr><td align="left" balign="left"> + currentThread() : Thread </td></tr>
<tr><td align="left" balign="left"> + yield() </td></tr>
<tr><td align="left" balign="left"> + sleep(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + sleep(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> - init(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long) </td></tr>
<tr><td align="left" balign="left"> - init(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long, arg4 : AccessControlContext) </td></tr>
<tr><td align="left" balign="left"> # clone() : Object </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> - start0() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> - exit() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + stop(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + interrupt() </td></tr>
<tr><td align="left" balign="left"> + interrupted() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInterrupted() : boolean </td></tr>
<tr><td align="left" balign="left"> - isInterrupted(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + isAlive() : boolean </td></tr>
<tr><td align="left" balign="left"> + suspend() </td></tr>
<tr><td align="left" balign="left"> + resume() </td></tr>
<tr><td align="left" balign="left"> + setPriority(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getPriority() : int </td></tr>
<tr><td align="left" balign="left"> + setName(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getThreadGroup() : ThreadGroup </td></tr>
<tr><td align="left" balign="left"> + activeCount() : int </td></tr>
<tr><td align="left" balign="left"> + enumerate(arg0 : Thread[]) : int </td></tr>
<tr><td align="left" balign="left"> + countStackFrames() : int </td></tr>
<tr><td align="left" balign="left"> + join(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + join(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + join() </td></tr>
<tr><td align="left" balign="left"> + dumpStack() </td></tr>
<tr><td align="left" balign="left"> + setDaemon(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isDaemon() : boolean </td></tr>
<tr><td align="left" balign="left"> + checkAccess() </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getContextClassLoader() : ClassLoader </td></tr>
<tr><td align="left" balign="left"> + setContextClassLoader(arg0 : ClassLoader) </td></tr>
<tr><td align="left" balign="left"> + holdsLock(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getStackTrace() : StackTraceElement[] </td></tr>
<tr><td align="left" balign="left"> + getAllStackTraces() : Map&lt;Thread, StackTraceElement&gt; </td></tr>
<tr><td align="left" balign="left"> - isCCLOverridden(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - auditSubclass(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - dumpThreads(arg0 : Thread[]) : StackTraceElement[][] </td></tr>
<tr><td align="left" balign="left"> - getThreads() : Thread[] </td></tr>
<tr><td align="left" balign="left"> + getId() : long </td></tr>
<tr><td align="left" balign="left"> + getState() : Thread.State </td></tr>
<tr><td align="left" balign="left"> + setDefaultUncaughtExceptionHandler(arg0 : Thread.UncaughtExceptionHandler) </td></tr>
<tr><td align="left" balign="left"> + getDefaultUncaughtExceptionHandler() : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> + getUncaughtExceptionHandler() : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> + setUncaughtExceptionHandler(arg0 : Thread.UncaughtExceptionHandler) </td></tr>
<tr><td align="left" balign="left"> - dispatchUncaughtException(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> ~ processQueue(arg0 : ReferenceQueue&lt;Class&lt;?&gt;&gt;, arg1 : ConcurrentMap&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> - setPriority0(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - stop0(arg0 : Object) </td></tr>
<tr><td align="left" balign="left"> - suspend0() </td></tr>
<tr><td align="left" balign="left"> - resume0() </td></tr>
<tr><td align="left" balign="left"> - interrupt0() </td></tr>
<tr><td align="left" balign="left"> - setNativeName(arg0 : String) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Thread.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.RuntimeException
	c38 [label=<<table title="java.lang.RuntimeException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/RuntimeException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RuntimeException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RuntimeException() </td></tr>
<tr><td align="left" balign="left"> + RuntimeException(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + RuntimeException(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + RuntimeException(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> # RuntimeException(arg0 : String, arg1 : Throwable, arg2 : boolean, arg3 : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/RuntimeException.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

