#!/usr/local/bin/dot
#
# Class diagram 
# Generated by UMLGraph version R5_6-24-gf6e263 (http://www.umlgraph.org/)
#

digraph G {
	edge [fontname="Helvetica",fontsize=10,labelfontname="Helvetica",labelfontsize=10];
	node [fontname="Helvetica",fontsize=10,shape=plaintext];
	nodesep=0.25;
	ranksep=0.5;
	// lejos.hardware.Audio
	c0 [label=<<table title="lejos.hardware.Audio" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Audio </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + systemSound(aCode : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + playTone(aFrequency : int, aDuration : int, aVolume : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + playTone(freq : int, duration : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + playSample(file : File, vol : int) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + playSample(file : File) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + playSample(data : byte[], offset : int, len : int, freq : int, vol : int) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + playNote(inst : int[], freq : int, len : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setVolume(vol : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getVolume() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + loadSettings() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.Key
	c1 [label=<<table title="lejos.hardware.Key" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Key </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + UP : int </td></tr>
<tr><td align="left" balign="left"> + ENTER : int </td></tr>
<tr><td align="left" balign="left"> + DOWN : int </td></tr>
<tr><td align="left" balign="left"> + RIGHT : int </td></tr>
<tr><td align="left" balign="left"> + LEFT : int </td></tr>
<tr><td align="left" balign="left"> + ESCAPE : int </td></tr>
<tr><td align="left" balign="left"> + KEY_RELEASED : int </td></tr>
<tr><td align="left" balign="left"> + KEY_PRESSED : int </td></tr>
<tr><td align="left" balign="left"> + KEY_PRESSED_AND_RELEASED : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getId() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isDown() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isUp() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + waitForPress() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + waitForPressAndRelease() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addKeyListener(listener : KeyListener) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + simulateEvent(event : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getName() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.KeyListener
	c2 [label=<<table title="lejos.hardware.KeyListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> KeyListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + keyPressed(k : Key) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + keyReleased(k : Key) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.Keys
	c3 [label=<<table title="lejos.hardware.Keys" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Keys </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ID_UP : int </td></tr>
<tr><td align="left" balign="left"> + ID_ENTER : int </td></tr>
<tr><td align="left" balign="left"> + ID_DOWN : int </td></tr>
<tr><td align="left" balign="left"> + ID_RIGHT : int </td></tr>
<tr><td align="left" balign="left"> + ID_LEFT : int </td></tr>
<tr><td align="left" balign="left"> + ID_ESCAPE : int </td></tr>
<tr><td align="left" balign="left"> + ID_ALL : int </td></tr>
<tr><td align="left" balign="left"> + NUM_KEYS : int </td></tr>
<tr><td align="left" balign="left"> + VOL_SETTING : String </td></tr>
<tr><td align="left" balign="left"> + LEN_SETTING : String </td></tr>
<tr><td align="left" balign="left"> + FREQ_SETTING : String </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + discardEvents() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + waitForAnyEvent() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + waitForAnyEvent(timeout : int) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + waitForAnyPress(timeout : int) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + waitForAnyPress() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getButtons() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + readButtons() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setKeyClickVolume(vol : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getKeyClickVolume() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setKeyClickLength(len : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getKeyClickLength() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setKeyClickTone(key : int, freq : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getKeyClickTone(key : int) : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.LED
	c4 [label=<<table title="lejos.hardware.LED" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> LED </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setPattern(pattern : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.Power
	c5 [label=<<table title="lejos.hardware.Power" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Power </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getVoltageMilliVolt() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getVoltage() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getBatteryCurrent() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMotorCurrent() : float </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.Sounds
	c6 [label=<<table title="lejos.hardware.Sounds" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Sounds </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PIANO : int[] </td></tr>
<tr><td align="left" balign="left"> + FLUTE : int[] </td></tr>
<tr><td align="left" balign="left"> + XYLOPHONE : int[] </td></tr>
<tr><td align="left" balign="left"> + BEEP : int </td></tr>
<tr><td align="left" balign="left"> + DOUBLE_BEEP : int </td></tr>
<tr><td align="left" balign="left"> + ASCENDING : int </td></tr>
<tr><td align="left" balign="left"> + DESCENDING : int </td></tr>
<tr><td align="left" balign="left"> + BUZZ : int </td></tr>
<tr><td align="left" balign="left"> + VOL_MAX : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.lcd.CommonLCD
	c7 [label=<<table title="lejos.hardware.lcd.CommonLCD" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> CommonLCD </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ROP_CLEAR : int </td></tr>
<tr><td align="left" balign="left"> + ROP_AND : int </td></tr>
<tr><td align="left" balign="left"> + ROP_ANDREVERSE : int </td></tr>
<tr><td align="left" balign="left"> + ROP_COPY : int </td></tr>
<tr><td align="left" balign="left"> + ROP_ANDINVERTED : int </td></tr>
<tr><td align="left" balign="left"> + ROP_NOOP : int </td></tr>
<tr><td align="left" balign="left"> + ROP_XOR : int </td></tr>
<tr><td align="left" balign="left"> + ROP_OR : int </td></tr>
<tr><td align="left" balign="left"> + ROP_NOR : int </td></tr>
<tr><td align="left" balign="left"> + ROP_EQUIV : int </td></tr>
<tr><td align="left" balign="left"> + ROP_INVERT : int </td></tr>
<tr><td align="left" balign="left"> + ROP_ORREVERSE : int </td></tr>
<tr><td align="left" balign="left"> + ROP_COPYINVERTED : int </td></tr>
<tr><td align="left" balign="left"> + ROP_ORINVERTED : int </td></tr>
<tr><td align="left" balign="left"> + ROP_NAND : int </td></tr>
<tr><td align="left" balign="left"> + ROP_SET : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + refresh() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + clear() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getWidth() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getHeight() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getDisplay() : byte[] </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getHWDisplay() : byte[] </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setContrast(contrast : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + bitBlt(src : byte[], sw : int, sh : int, sx : int, sy : int, dx : int, dy : int, w : int, h : int, rop : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + bitBlt(src : byte[], sw : int, sh : int, sx : int, sy : int, dst : byte[], dw : int, dh : int, dx : int, dy : int, w : int, h : int, rop : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setAutoRefresh(on : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setAutoRefreshPeriod(period : int) : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.lcd.GraphicsLCD
	c8 [label=<<table title="lejos.hardware.lcd.GraphicsLCD" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> GraphicsLCD </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + TRANS_MIRROR : int </td></tr>
<tr><td align="left" balign="left"> + TRANS_MIRROR_ROT180 : int </td></tr>
<tr><td align="left" balign="left"> + TRANS_MIRROR_ROT270 : int </td></tr>
<tr><td align="left" balign="left"> + TRANS_MIRROR_ROT90 : int </td></tr>
<tr><td align="left" balign="left"> + TRANS_NONE : int </td></tr>
<tr><td align="left" balign="left"> + TRANS_ROT180 : int </td></tr>
<tr><td align="left" balign="left"> + TRANS_ROT270 : int </td></tr>
<tr><td align="left" balign="left"> + TRANS_ROT90 : int </td></tr>
<tr><td align="left" balign="left"> + HCENTER : int </td></tr>
<tr><td align="left" balign="left"> + VCENTER : int </td></tr>
<tr><td align="left" balign="left"> + LEFT : int </td></tr>
<tr><td align="left" balign="left"> + RIGHT : int </td></tr>
<tr><td align="left" balign="left"> + TOP : int </td></tr>
<tr><td align="left" balign="left"> + BOTTOM : int </td></tr>
<tr><td align="left" balign="left"> + BASELINE : int </td></tr>
<tr><td align="left" balign="left"> + SOLID : int </td></tr>
<tr><td align="left" balign="left"> + DOTTED : int </td></tr>
<tr><td align="left" balign="left"> + BLACK : int </td></tr>
<tr><td align="left" balign="left"> + WHITE : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setPixel(x : int, y : int, color : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getPixel(x : int, y : int) : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawString(str : String, x : int, y : int, anchor : int, inverted : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawString(str : String, x : int, y : int, anchor : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawSubstring(str : String, offset : int, len : int, x : int, y : int, anchor : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawChar(character : char, x : int, y : int, anchor : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawChars(data : char[], offset : int, length : int, x : int, y : int, anchor : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getStrokeStyle() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setStrokeStyle(style : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawRegionRop(src : Image, sx : int, sy : int, w : int, h : int, x : int, y : int, anchor : int, rop : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawRegionRop(src : Image, sx : int, sy : int, w : int, h : int, transform : int, x : int, y : int, anchor : int, rop : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawRegion(src : Image, sx : int, sy : int, w : int, h : int, transform : int, x : int, y : int, anchor : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawImage(src : Image, x : int, y : int, anchor : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawLine(x0 : int, y0 : int, x1 : int, y1 : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawArc(x : int, y : int, width : int, height : int, startAngle : int, arcAngle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + fillArc(x : int, y : int, width : int, height : int, startAngle : int, arcAngle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawRoundRect(x : int, y : int, width : int, height : int, arcWidth : int, arcHeight : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawRect(x : int, y : int, width : int, height : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + fillRect(x : int, y : int, w : int, h : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + copyArea(sx : int, sy : int, w : int, h : int, x : int, y : int, anchor : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getFont() : Font </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setFont(f : Font) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + translate(x : int, y : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTranslateX() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTranslateY() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setColor(rgb : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setColor(red : int, green : int, blue : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.lcd.TextLCD
	c9 [label=<<table title="lejos.hardware.lcd.TextLCD" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> TextLCD </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawChar(c : char, x : int, y : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawString(str : String, x : int, y : int, inverted : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawString(str : String, x : int, y : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawInt(i : int, x : int, y : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + drawInt(i : int, places : int, x : int, y : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + clear(x : int, y : int, n : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + clear(y : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + scroll() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getFont() : Font </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTextWidth() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTextHeight() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.port.MotorPort
	c10 [label=<<table title="lejos.hardware.port.MotorPort" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> MotorPort </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + A : Port </td></tr>
<tr><td align="left" balign="left"> + B : Port </td></tr>
<tr><td align="left" balign="left"> + C : Port </td></tr>
<tr><td align="left" balign="left"> + D : Port </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.port.Port
	c11 [label=<<table title="lejos.hardware.port.Port" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Port </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getName() : String </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.port.SensorPort
	c12 [label=<<table title="lejos.hardware.port.SensorPort" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SensorPort </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + S1 : Port </td></tr>
<tr><td align="left" balign="left"> + S2 : Port </td></tr>
<tr><td align="left" balign="left"> + S3 : Port </td></tr>
<tr><td align="left" balign="left"> + S4 : Port </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.hardware.sensor.EV3SensorConstants
	c13 [label=<<table title="lejos.hardware.sensor.EV3SensorConstants" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> EV3SensorConstants </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PORTS : int </td></tr>
<tr><td align="left" balign="left"> + MOTORS : int </td></tr>
<tr><td align="left" balign="left"> + CONN_UNKNOWN : int </td></tr>
<tr><td align="left" balign="left"> + CONN_DAISYCHAIN : int </td></tr>
<tr><td align="left" balign="left"> + CONN_NXT_COLOR : int </td></tr>
<tr><td align="left" balign="left"> + CONN_NXT_DUMB : int </td></tr>
<tr><td align="left" balign="left"> + CONN_NXT_IIC : int </td></tr>
<tr><td align="left" balign="left"> + CONN_INPUT_DUMB : int </td></tr>
<tr><td align="left" balign="left"> + CONN_INPUT_UART : int </td></tr>
<tr><td align="left" balign="left"> + CONN_OUTPUT_DUMB : int </td></tr>
<tr><td align="left" balign="left"> + CONN_OUTPUT_INTELLIGENT : int </td></tr>
<tr><td align="left" balign="left"> + CONN_OUTPUT_TACHO : int </td></tr>
<tr><td align="left" balign="left"> + CONN_NONE : int </td></tr>
<tr><td align="left" balign="left"> + CONN_ERROR : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_NXT_TOUCH : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_NXT_LIGHT : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_NXT_SOUND : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_NXT_COLOR : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_TACHO : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_MINITACHO : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_NEWTACHO : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_THIRD_PARTY_START : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_THIRD_PARTY_END : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_IIC_UNKNOWN : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_NXT_TEST : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_NXT_IIC : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_TERMINAL : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_UNKNOWN : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_NONE : int </td></tr>
<tr><td align="left" balign="left"> + TYPE_ERROR : int </td></tr>
<tr><td align="left" balign="left"> + UART_MAX_MODES : int </td></tr>
<tr><td align="left" balign="left"> + MAX_DEVICE_DATALENGTH : int </td></tr>
<tr><td align="left" balign="left"> + IIC_DATA_LENGTH : int </td></tr>
<tr><td align="left" balign="left"> + STATUS_OK : int </td></tr>
<tr><td align="left" balign="left"> + STATUS_BUSY : int </td></tr>
<tr><td align="left" balign="left"> + STATUS_FAIL : int </td></tr>
<tr><td align="left" balign="left"> + STATUS_STOP : int </td></tr>
<tr><td align="left" balign="left"> + CMD_NONE : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_FLOAT : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_SET : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_AUTOMATIC : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_CONNECTED : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_DISCONNECTED : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_COL_COL : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_COL_RED : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_COL_GRN : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_COL_BLU : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_COL_AMB : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_PIN1 : byte </td></tr>
<tr><td align="left" balign="left"> + CMD_PIN5 : byte </td></tr>
<tr><td align="left" balign="left"> + ADC_REF : float </td></tr>
<tr><td align="left" balign="left"> + ADC_RES : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.internals.EV3DevPort
	c14 [label=<<table title="lejos.internals.EV3DevPort" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EV3DevPort </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SENSOR_PORT : int </td></tr>
<tr><td align="left" balign="left"> + MOTOR_PORT : int </td></tr>
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # typ : int </td></tr>
<tr><td align="left" balign="left"> # portNum : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EV3DevPort(name : String, typ : int, portNum : int) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Accelerometer
	c15 [label=<<table title="lejos.robotics.Accelerometer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Accelerometer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getXAccel() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getYAccel() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getZAccel() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.AccelerometerAdapter
	c16 [label=<<table title="lejos.robotics.AccelerometerAdapter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> AccelerometerAdapter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ sample : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AccelerometerAdapter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> # getElement(index : int) : int </td></tr>
<tr><td align="left" balign="left"> + getXAccel() : int </td></tr>
<tr><td align="left" balign="left"> + getYAccel() : int </td></tr>
<tr><td align="left" balign="left"> + getZAccel() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.BaseMotor
	c17 [label=<<table title="lejos.robotics.BaseMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> BaseMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + forward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + backward() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + stop() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + flt() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isMoving() : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Calibrate
	c18 [label=<<table title="lejos.robotics.Calibrate" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Calibrate </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + startCalibration() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + stopCalibration() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Color
	c19 [label=<<table title="lejos.robotics.Color" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Color </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + NONE : int </td></tr>
<tr><td align="left" balign="left"> + BLACK : int </td></tr>
<tr><td align="left" balign="left"> + BLUE : int </td></tr>
<tr><td align="left" balign="left"> + GREEN : int </td></tr>
<tr><td align="left" balign="left"> + YELLOW : int </td></tr>
<tr><td align="left" balign="left"> + RED : int </td></tr>
<tr><td align="left" balign="left"> + WHITE : int </td></tr>
<tr><td align="left" balign="left"> + MAGENTA : int </td></tr>
<tr><td align="left" balign="left"> + ORANGE : int </td></tr>
<tr><td align="left" balign="left"> + BROWN : int </td></tr>
<tr><td align="left" balign="left"> - red : int </td></tr>
<tr><td align="left" balign="left"> - blue : int </td></tr>
<tr><td align="left" balign="left"> - green : int </td></tr>
<tr><td align="left" balign="left"> - color : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Color(red : int, green : int, blue : int) </td></tr>
<tr><td align="left" balign="left"> + Color(red : int, green : int, blue : int, color : int) </td></tr>
<tr><td align="left" balign="left"> + getRed() : int </td></tr>
<tr><td align="left" balign="left"> + getGreen() : int </td></tr>
<tr><td align="left" balign="left"> + getBlue() : int </td></tr>
<tr><td align="left" balign="left"> + getColor() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.ColorIdentifier
	c20 [label=<<table title="lejos.robotics.ColorIdentifier" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> ColorIdentifier </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getColorID() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.DCMotor
	c21 [label=<<table title="lejos.robotics.DCMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> DCMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setPower(power : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getPower() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.DirectionFinder
	c22 [label=<<table title="lejos.robotics.DirectionFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> DirectionFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getDegreesCartesian() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + resetCartesianZero() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.DirectionFinderAdapter
	c23 [label=<<table title="lejos.robotics.DirectionFinderAdapter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> DirectionFinderAdapter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - calibrator : Calibrate </td></tr>
<tr><td align="left" balign="left"> - provider : SampleProvider </td></tr>
<tr><td align="left" balign="left"> - initialProvider : SampleProvider </td></tr>
<tr><td align="left" balign="left"> - sample : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + DirectionFinderAdapter(provider : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + getDegreesCartesian() : float </td></tr>
<tr><td align="left" balign="left"> + startCalibration() </td></tr>
<tr><td align="left" balign="left"> + stopCalibration() </td></tr>
<tr><td align="left" balign="left"> + resetCartesianZero() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.EV3DevBaseMotor
	c24 [label=<<table title="lejos.robotics.EV3DevBaseMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> EV3DevBaseMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + coast() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + brake() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + hold() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Encoder
	c25 [label=<<table title="lejos.robotics.Encoder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Encoder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getTachoCount() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + resetTachoCount() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Gyroscope
	c26 [label=<<table title="lejos.robotics.Gyroscope" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Gyroscope </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getAngularVelocity() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + recalibrateOffset() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getAngle() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + reset() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.LampController
	c27 [label=<<table title="lejos.robotics.LampController" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> LampController </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setFloodlight(floodlight : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isFloodlightOn() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getFloodlight() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setFloodlight(color : int) : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.LightDetector
	c28 [label=<<table title="lejos.robotics.LightDetector" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> LightDetector </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getLightValue() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getNormalizedLightValue() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getHigh() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getLow() : float </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.RangeFinder
	c29 [label=<<table title="lejos.robotics.RangeFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RangeFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRange() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRanges() : float[] </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.RangeFinderAdapter
	c30 [label=<<table title="lejos.robotics.RangeFinderAdapter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RangeFinderAdapter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - buf : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RangeFinderAdapter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + getRange() : float </td></tr>
<tr><td align="left" balign="left"> + getRanges() : float[] </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.RangeReading
	c31 [label=<<table title="lejos.robotics.RangeReading" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RangeReading </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - range : float </td></tr>
<tr><td align="left" balign="left"> - angle : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RangeReading(angle : float, range : float) </td></tr>
<tr><td align="left" balign="left"> + getRange() : float </td></tr>
<tr><td align="left" balign="left"> + getAngle() : float </td></tr>
<tr><td align="left" balign="left"> + invalidReading() : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.RangeReadings
	c32 [label=<<table title="lejos.robotics.RangeReadings" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RangeReadings </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RangeReadings(numReadings : int) </td></tr>
<tr><td align="left" balign="left"> + getRange(i : int) : float </td></tr>
<tr><td align="left" balign="left"> + getRange(angle : float) : float </td></tr>
<tr><td align="left" balign="left"> + getAngle(index : int) : float </td></tr>
<tr><td align="left" balign="left"> + incomplete() : boolean </td></tr>
<tr><td align="left" balign="left"> + getNumReadings() : int </td></tr>
<tr><td align="left" balign="left"> + setRange(index : int, angle : float, range : float) </td></tr>
<tr><td align="left" balign="left"> + dumpObject(dos : DataOutputStream) </td></tr>
<tr><td align="left" balign="left"> + loadObject(dis : DataInputStream) </td></tr>
<tr><td align="left" balign="left"> + printReadings() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.RangeScanner
	c33 [label=<<table title="lejos.robotics.RangeScanner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RangeScanner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRangeValues() : RangeReadings </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setAngles(angles : float[]) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRangeFinder() : RangeFinder </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.RegulatedMotor
	c34 [label=<<table title="lejos.robotics.RegulatedMotor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RegulatedMotor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + addListener(listener : RegulatedMotorListener) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + removeListener() : RegulatedMotorListener </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + stop(immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + flt(immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + waitComplete() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : int, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotate(angle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateTo(limitAngle : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotateTo(limitAngle : int, immediateReturn : boolean) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setSpeed(speed : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getSpeed() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getMaxSpeed() : float </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isStalled() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setAcceleration(acceleration : int) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + synchronizeWith(syncList : RegulatedMotor[]) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + startSynchronization() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + endSynchronization() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.RegulatedMotorListener
	c35 [label=<<table title="lejos.robotics.RegulatedMotorListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> RegulatedMotorListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotationStarted(motor : RegulatedMotor, tachoCount : int, stalled : boolean, timeStamp : long) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + rotationStopped(motor : RegulatedMotor, tachoCount : int, stalled : boolean, timeStamp : long) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.SampleProvider
	c36 [label=<<table title="lejos.robotics.SampleProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> SampleProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + sampleSize() : int </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + fetchSample(sample : float[], offset : int) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Tachometer
	c37 [label=<<table title="lejos.robotics.Tachometer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Tachometer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getRotationSpeed() : int </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Touch
	c38 [label=<<table title="lejos.robotics.Touch" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Touch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isPressed() : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.Transmittable
	c39 [label=<<table title="lejos.robotics.Transmittable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Transmittable </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + dumpObject(dos : DataOutputStream) </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + loadObject(dis : DataInputStream) </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.AbstractCalibrationFilter
	c40 [label=<<table title="lejos.robotics.filter.AbstractCalibrationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractCalibrationFilter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # lowPassFilter : LowPassFilter </td></tr>
<tr><td align="left" balign="left"> # min : float[] </td></tr>
<tr><td align="left" balign="left"> # max : float[] </td></tr>
<tr><td align="left" balign="left"> # sum : float[] </td></tr>
<tr><td align="left" balign="left"> # calibrating : boolean </td></tr>
<tr><td align="left" balign="left"> - DIRECTORY : String </td></tr>
<tr><td align="left" balign="left"> - EXT : String </td></tr>
<tr><td align="left" balign="left"> - props : Properties </td></tr>
<tr><td align="left" balign="left"> # numberOfSamplesInCalibration : int </td></tr>
<tr><td align="left" balign="left"> - timeConstant : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractCalibrationFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + setTimeConstant(timeConstant : float) </td></tr>
<tr><td align="left" balign="left"> + startCalibration() </td></tr>
<tr><td align="left" balign="left"> + stopCalibration() </td></tr>
<tr><td align="left" balign="left"> + suspendCalibration() </td></tr>
<tr><td align="left" balign="left"> + resumeCalibration() </td></tr>
<tr><td align="left" balign="left"> - getFile(filename : String) : File </td></tr>
<tr><td align="left" balign="left"> # load(filename : String) </td></tr>
<tr><td align="left" balign="left"> # store(filename : String) </td></tr>
<tr><td align="left" balign="left"> # getPropertyArray(key : String) : float[] </td></tr>
<tr><td align="left" balign="left"> # setPropertyArray(key : String, values : float[]) </td></tr>
<tr><td align="left" balign="left"> # setProperty(key : String, value : float) </td></tr>
<tr><td align="left" balign="left"> # getProperty(key : String) : float </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.AbstractCalibrationFilter.CalibrationFileException
	c41 [label=<<table title="lejos.robotics.filter.AbstractCalibrationFilter.CalibrationFileException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> CalibrationFileException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + CalibrationFileException(string : String) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.AbstractFilter
	c42 [label=<<table title="lejos.robotics.filter.AbstractFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> AbstractFilter </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # source : SampleProvider </td></tr>
<tr><td align="left" balign="left"> # sampleSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + AbstractFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.ConcatenationFilter
	c43 [label=<<table title="lejos.robotics.filter.ConcatenationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ConcatenationFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - source1 : SampleProvider </td></tr>
<tr><td align="left" balign="left"> - source2 : SampleProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ConcatenationFilter(source1 : SampleProvider, source2 : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.FilterTerminal
	c44 [label=<<table title="lejos.robotics.filter.FilterTerminal" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> FilterTerminal </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - source : SampleProvider </td></tr>
<tr><td align="left" balign="left"> - index : int </td></tr>
<tr><td align="left" balign="left"> - sample : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + FilterTerminal(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + setIndex(index : int) </td></tr>
<tr><td align="left" balign="left"> + isFalse() : boolean </td></tr>
<tr><td align="left" balign="left"> + isTrue() : boolean </td></tr>
<tr><td align="left" balign="left"> + fetch() : float </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.IntegrationFilter
	c45 [label=<<table title="lejos.robotics.filter.IntegrationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> IntegrationFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - lastTime : long </td></tr>
<tr><td align="left" balign="left"> - currentValue : float[] </td></tr>
<tr><td align="left" balign="left"> - NANO : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + IntegrationFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + resetTo(value : float) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.LinearCalibrationFilter
	c46 [label=<<table title="lejos.robotics.filter.LinearCalibrationFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LinearCalibrationFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OFFSET_CALIBRATION : int </td></tr>
<tr><td align="left" balign="left"> + OFFSET_AND_SCALE_CALIBRATION : int </td></tr>
<tr><td align="left" balign="left"> - lowerBound : float[] </td></tr>
<tr><td align="left" balign="left"> - upperBound : float[] </td></tr>
<tr><td align="left" balign="left"> - offset : float[] </td></tr>
<tr><td align="left" balign="left"> - scale : float[] </td></tr>
<tr><td align="left" balign="left"> - calibrationType : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LinearCalibrationFilter(source : SampleProvider, filename : String) </td></tr>
<tr><td align="left" balign="left"> + LinearCalibrationFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + setScaleCalibration(ulBound : float) </td></tr>
<tr><td align="left" balign="left"> + setScaleCalibration(lBound : float, uBound : float) </td></tr>
<tr><td align="left" balign="left"> + setScaleCalibration(lBound : float[], uBound : float[]) </td></tr>
<tr><td align="left" balign="left"> + setOffsetCalibration(offset : float) </td></tr>
<tr><td align="left" balign="left"> + setOffsetCalibration(offset : float[]) </td></tr>
<tr><td align="left" balign="left"> + setCalibrationType(calibrationType : int) </td></tr>
<tr><td align="left" balign="left"> + getCallibrationType() : int </td></tr>
<tr><td align="left" balign="left"> + getOffsetCorrection() : float[] </td></tr>
<tr><td align="left" balign="left"> + getScaleCorrection() : float[] </td></tr>
<tr><td align="left" balign="left"> + startCalibration() </td></tr>
<tr><td align="left" balign="left"> + stopCalibration() </td></tr>
<tr><td align="left" balign="left"> + save(filename : String) </td></tr>
<tr><td align="left" balign="left"> + open(name : String) </td></tr>
<tr><td align="left" balign="left"> - reset() </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + getCalibrationType() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.LowPassFilter
	c47 [label=<<table title="lejos.robotics.filter.LowPassFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LowPassFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ smoothed : float[] </td></tr>
<tr><td align="left" balign="left"> ~ lastTime : long </td></tr>
<tr><td align="left" balign="left"> ~ timeConstant : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LowPassFilter(source : SampleProvider, timeConstant : float) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + setTimeConstant(timeConstant : float) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.MaximumFilter
	c48 [label=<<table title="lejos.robotics.filter.MaximumFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MaximumFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ max : float[] </td></tr>
<tr><td align="left" balign="left"> ~ buf : float[] </td></tr>
<tr><td align="left" balign="left"> ~ oldest : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MaximumFilter(source : SampleProvider, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.MeanFilter
	c49 [label=<<table title="lejos.robotics.filter.MeanFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MeanFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MeanFilter(source : SampleProvider, length : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.MedianFilter
	c50 [label=<<table title="lejos.robotics.filter.MedianFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MedianFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MedianFilter(source : SampleProvider, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.MinimumFilter
	c51 [label=<<table title="lejos.robotics.filter.MinimumFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> MinimumFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ min : float[] </td></tr>
<tr><td align="left" balign="left"> ~ buf : float[] </td></tr>
<tr><td align="left" balign="left"> ~ oldest : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + MinimumFilter(source : SampleProvider, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.ModulusFilter
	c52 [label=<<table title="lejos.robotics.filter.ModulusFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ModulusFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - zeroValue : float[] </td></tr>
<tr><td align="left" balign="left"> ~ sample : float[] </td></tr>
<tr><td align="left" balign="left"> ~ modulus : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ModulusFilter(source : SampleProvider, zeroValue : float[], modulus : float) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.OffsetCorrectionFilter
	c53 [label=<<table title="lejos.robotics.filter.OffsetCorrectionFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> OffsetCorrectionFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ offset : float[] </td></tr>
<tr><td align="left" balign="left"> ~ reference : float[] </td></tr>
<tr><td align="left" balign="left"> - mean : float[] </td></tr>
<tr><td align="left" balign="left"> - m2 : float[] </td></tr>
<tr><td align="left" balign="left"> - actual : float[] </td></tr>
<tr><td align="left" balign="left"> - buffer : Queue&lt;Float&gt;[] </td></tr>
<tr><td align="left" balign="left"> - bufferSize : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OffsetCorrectionFilter(source : SampleProvider) </td></tr>
<tr><td align="left" balign="left"> + OffsetCorrectionFilter(source : SampleProvider, reference : float[]) </td></tr>
<tr><td align="left" balign="left"> + OffsetCorrectionFilter(source : SampleProvider, reference : float[], bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> - updateStatistics() </td></tr>
<tr><td align="left" balign="left"> - withinLimits(i : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - addSample(i : int) </td></tr>
<tr><td align="left" balign="left"> - removeSample(i : int) </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> - getVariance(i : int) : float </td></tr>
<tr><td align="left" balign="left"> - getStandardDeviation(i : int) : float </td></tr>
<tr><td align="left" balign="left"> + getMean() : float[] </td></tr>
<tr><td align="left" balign="left"> + getStandardDeviation() : float[] </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.PublishedSource
	c54 [label=<<table title="lejos.robotics.filter.PublishedSource" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PublishedSource </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # MAX_PACKET_SIZE : int </td></tr>
<tr><td align="left" balign="left"> # PUBLISH_PORT : int </td></tr>
<tr><td align="left" balign="left"> # SOCKET_TIMEOUT : int </td></tr>
<tr><td align="left" balign="left"> # MAX_AGE : int </td></tr>
<tr><td align="left" balign="left"> # MAX_SAMPLE_MESSAGE_SIZE : int </td></tr>
<tr><td align="left" balign="left"> - listener : PublishedSource.Listener </td></tr>
<tr><td align="left" balign="left"> # name : String </td></tr>
<tr><td align="left" balign="left"> # sampleSize : int </td></tr>
<tr><td align="left" balign="left"> # sample : float[] </td></tr>
<tr><td align="left" balign="left"> # frequency : float </td></tr>
<tr><td align="left" balign="left"> # host : String </td></tr>
<tr><td align="left" balign="left"> # port : int </td></tr>
<tr><td align="left" balign="left"> # timeStamp : long </td></tr>
<tr><td align="left" balign="left"> # formatter : DateFormat </td></tr>
<tr><td align="left" balign="left"> # ipAddress : String </td></tr>
<tr><td align="left" balign="left"> # socket : Socket </td></tr>
<tr><td align="left" balign="left"> # dis : DataInputStream </td></tr>
<tr><td align="left" balign="left"> - sources : Map&lt;String, PublishedSource&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + PublishedSource(ipAddress : String, message : byte[]) </td></tr>
<tr><td align="left" balign="left"> + connect() : SubscribedProvider </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getFrequency() : float </td></tr>
<tr><td align="left" balign="left"> + getHost() : String </td></tr>
<tr><td align="left" balign="left"> + getTime() : String </td></tr>
<tr><td align="left" balign="left"> + getKey() : String </td></tr>
<tr><td align="left" balign="left"> + getIpAddress() : String </td></tr>
<tr><td align="left" balign="left"> + getPort() : int </td></tr>
<tr><td align="left" balign="left"> + getTimeStamp() : long </td></tr>
<tr><td align="left" balign="left"> + close() </td></tr>
<tr><td align="left" balign="left"> + getSources() : Collection&lt;PublishedSource&gt; </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.PublishedSource.Listener
	c55 [label=<<table title="lejos.robotics.filter.PublishedSource.Listener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Listener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Listener() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SampleBuffer
	c56 [label=<<table title="lejos.robotics.filter.SampleBuffer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> SampleBuffer </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ bufferSize : int </td></tr>
<tr><td align="left" balign="left"> ~ actualSize : int </td></tr>
<tr><td align="left" balign="left"> ~ currentPos : int </td></tr>
<tr><td align="left" balign="left"> ~ sampleBuffer : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SampleBuffer(source : SampleProvider, bufferSize : int) </td></tr>
<tr><td align="left" balign="left"> + getBufferSize() : int </td></tr>
<tr><td align="left" balign="left"> - reset() </td></tr>
<tr><td align="left" balign="left"> ~ toPos(i : int, index : int) : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> # getOldest(sample : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> # getActualSize() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SampleThread
	c57 [label=<<table title="lejos.robotics.filter.SampleThread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SampleThread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ buffer : float[] </td></tr>
<tr><td align="left" balign="left"> ~ running : boolean </td></tr>
<tr><td align="left" balign="left"> - sampleRate : float </td></tr>
<tr><td align="left" balign="left"> ~ interval : int </td></tr>
<tr><td align="left" balign="left"> ~ newSampleAvailable : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SampleThread(source : SampleProvider, sampleRate : float) </td></tr>
<tr><td align="left" balign="left"> + isNewSampleAvailable() : boolean </td></tr>
<tr><td align="left" balign="left"> + fetchSample(dst : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> + getSampleRate() : float </td></tr>
<tr><td align="left" balign="left"> + setSampleRate(rate : float) </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SampleThread.Runner
	c58 [label=<<table title="lejos.robotics.filter.SampleThread.Runner" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Runner </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Runner() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SliceFilter
	c59 [label=<<table title="lejos.robotics.filter.SliceFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SliceFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - firstIndex : int </td></tr>
<tr><td align="left" balign="left"> - lastIndex : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SliceFilter(source : SampleProvider, firstIndex : int, lastIndex : int) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SubscribedProvider
	c60 [label=<<table title="lejos.robotics.filter.SubscribedProvider" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SubscribedProvider </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # formatter : DateFormat </td></tr>
<tr><td align="left" balign="left"> - sampleSize : int </td></tr>
<tr><td align="left" balign="left"> - latest : float[] </td></tr>
<tr><td align="left" balign="left"> - source : PublishedSource </td></tr>
<tr><td align="left" balign="left"> - dis : DataInputStream </td></tr>
<tr><td align="left" balign="left"> - timeStamp : long </td></tr>
<tr><td align="left" balign="left"> - host : String </td></tr>
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - active : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SubscribedProvider(dis : DataInputStream, source : PublishedSource) </td></tr>
<tr><td align="left" balign="left"> + sampleSize() : int </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> + getSource() : PublishedSource </td></tr>
<tr><td align="left" balign="left"> + getHost() : String </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getTimeStamp() : long </td></tr>
<tr><td align="left" balign="left"> + isActive() : boolean </td></tr>
<tr><td align="left" balign="left"> + getTime() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SumFilter
	c61 [label=<<table title="lejos.robotics.filter.SumFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SumFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - worker : SampleBuffer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + SumFilter(source : SampleProvider, length : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
<tr><td align="left" balign="left"> # getActualSize() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SumFilter.PlainSum
	c62 [label=<<table title="lejos.robotics.filter.SumFilter.PlainSum" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> PlainSum </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ latest : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - PlainSum(source : SampleProvider, length : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.SumFilter.SmartSum
	c63 [label=<<table title="lejos.robotics.filter.SumFilter.SmartSum" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> SmartSum </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ sum : float[] </td></tr>
<tr><td align="left" balign="left"> ~ oldest : float[] </td></tr>
<tr><td align="left" balign="left"> ~ latest : float[] </td></tr>
<tr><td align="left" balign="left"> ~ notRecalculated : int[] </td></tr>
<tr><td align="left" balign="left"> ~ recalculateIn : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - SmartSum(source : SampleProvider, length : int) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], off : int) </td></tr>
<tr><td align="left" balign="left"> - recalculateSum(index : int) : float </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.filter.ZeroFilter
	c64 [label=<<table title="lejos.robotics.filter.ZeroFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ZeroFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - zeroValue : float[] </td></tr>
<tr><td align="left" balign="left"> ~ sample : float[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ZeroFilter(source : SampleProvider, zeroValue : float[]) </td></tr>
<tr><td align="left" balign="left"> + fetchSample(sample : float[], offset : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Line
	c65 [label=<<table title="lejos.robotics.geometry.Line" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Line </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Line(x1 : float, y1 : float, x2 : float, y2 : float) </td></tr>
<tr><td align="left" balign="left"> + intersectsAt(l : Line) : Point </td></tr>
<tr><td align="left" balign="left"> + segDist(seg : Line) : double </td></tr>
<tr><td align="left" balign="left"> - between(x : float, x1 : float, x2 : float) : boolean </td></tr>
<tr><td align="left" balign="left"> + lengthen(delta : float) </td></tr>
<tr><td align="left" balign="left"> + length() : float </td></tr>
<tr><td align="left" balign="left"> + getP1() : Point </td></tr>
<tr><td align="left" balign="left"> + getP2() : Point </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Line2D
	c66 [label=<<table title="lejos.robotics.geometry.Line2D" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Line2D </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # Line2D() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getX1() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getY1() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getP1() : Point2D </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getX2() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getY2() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getP2() : Point2D </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setLine(x1 : double, y1 : double, x2 : double, y2 : double) </font></td></tr>
<tr><td align="left" balign="left"> + setLine(p1 : Point2D, p2 : Point2D) </td></tr>
<tr><td align="left" balign="left"> + setLine(line : Line2D) </td></tr>
<tr><td align="left" balign="left"> + contains(x : double, y : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(p : Point2D) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(x : double, y : double, w : double, h : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(r : Rectangle2D) : boolean </td></tr>
<tr><td align="left" balign="left"> + intersects(x : double, y : double, w : double, h : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + intersectsLine(x1 : double, y1 : double, x2 : double, y2 : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + intersectsLine(l : Line2D) : boolean </td></tr>
<tr><td align="left" balign="left"> + linesIntersect(x1 : double, y1 : double, x2 : double, y2 : double, x3 : double, y3 : double, x4 : double, y4 : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + getBounds() : RectangleInt32 </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + relativeCCW(x1 : double, y1 : double, x2 : double, y2 : double, px : double, py : double) : int </td></tr>
<tr><td align="left" balign="left"> + relativeCCW(p : Point2D) : int </td></tr>
<tr><td align="left" balign="left"> + relativeCCW(px : double, py : double) : int </td></tr>
<tr><td align="left" balign="left"> + intersects(r : Rectangle2D) : boolean </td></tr>
<tr><td align="left" balign="left"> + ptSegDistSq(x1 : double, y1 : double, x2 : double, y2 : double, px : double, py : double) : double </td></tr>
<tr><td align="left" balign="left"> + ptSegDist(x1 : double, y1 : double, x2 : double, y2 : double, px : double, py : double) : double </td></tr>
<tr><td align="left" balign="left"> + ptSegDistSq(px : double, py : double) : double </td></tr>
<tr><td align="left" balign="left"> + ptSegDistSq(p : Point2D) : double </td></tr>
<tr><td align="left" balign="left"> + ptSegDist(px : double, py : double) : double </td></tr>
<tr><td align="left" balign="left"> + ptSegDist(p : Point2D) : double </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Line2D.Float
	c67 [label=<<table title="lejos.robotics.geometry.Line2D.Float" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + x1 : float </td></tr>
<tr><td align="left" balign="left"> + y1 : float </td></tr>
<tr><td align="left" balign="left"> + x2 : float </td></tr>
<tr><td align="left" balign="left"> + y2 : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Float() </td></tr>
<tr><td align="left" balign="left"> + Float(x1 : float, y1 : float, x2 : float, y2 : float) </td></tr>
<tr><td align="left" balign="left"> + setLine(x1 : float, y1 : float, x2 : float, y2 : float) </td></tr>
<tr><td align="left" balign="left"> + getBounds2D() : Rectangle2D </td></tr>
<tr><td align="left" balign="left"> + getX1() : double </td></tr>
<tr><td align="left" balign="left"> + getY1() : double </td></tr>
<tr><td align="left" balign="left"> + getP1() : Point2D </td></tr>
<tr><td align="left" balign="left"> + getX2() : double </td></tr>
<tr><td align="left" balign="left"> + getY2() : double </td></tr>
<tr><td align="left" balign="left"> + getP2() : Point2D </td></tr>
<tr><td align="left" balign="left"> + setLine(x1 : double, y1 : double, x2 : double, y2 : double) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Line2D.Double
	c68 [label=<<table title="lejos.robotics.geometry.Line2D.Double" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + x1 : double </td></tr>
<tr><td align="left" balign="left"> + y1 : double </td></tr>
<tr><td align="left" balign="left"> + x2 : double </td></tr>
<tr><td align="left" balign="left"> + y2 : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Double() </td></tr>
<tr><td align="left" balign="left"> + Double(x1 : double, y1 : double, x2 : double, y2 : double) </td></tr>
<tr><td align="left" balign="left"> + getX1() : double </td></tr>
<tr><td align="left" balign="left"> + getY1() : double </td></tr>
<tr><td align="left" balign="left"> + getP1() : Point2D </td></tr>
<tr><td align="left" balign="left"> + getX2() : double </td></tr>
<tr><td align="left" balign="left"> + getY2() : double </td></tr>
<tr><td align="left" balign="left"> + getP2() : Point2D </td></tr>
<tr><td align="left" balign="left"> + setLine(x1 : double, y1 : double, x2 : double, y2 : double) </td></tr>
<tr><td align="left" balign="left"> + getBounds2D() : Rectangle2D </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Point
	c69 [label=<<table title="lejos.robotics.geometry.Point" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Point </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Point(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + Point(radians : float) </td></tr>
<tr><td align="left" balign="left"> + angleTo(p : Point) : float </td></tr>
<tr><td align="left" balign="left"> + translate(dx : float, dy : float) </td></tr>
<tr><td align="left" balign="left"> + copyTo(p : Point) : Point </td></tr>
<tr><td align="left" balign="left"> + clone() : Point </td></tr>
<tr><td align="left" balign="left"> + add(other : Point) : Point </td></tr>
<tr><td align="left" balign="left"> + addWith(other : Point) : Point </td></tr>
<tr><td align="left" balign="left"> + moveTo(other : Point) </td></tr>
<tr><td align="left" balign="left"> + subtract(other : Point) : Point </td></tr>
<tr><td align="left" balign="left"> + subtract(length : float) : Point </td></tr>
<tr><td align="left" balign="left"> + multiply(scale : float) : Point </td></tr>
<tr><td align="left" balign="left"> + getNormalized() : Point </td></tr>
<tr><td align="left" balign="left"> + reverse() : Point </td></tr>
<tr><td align="left" balign="left"> + projectOn(line : Line) : Point </td></tr>
<tr><td align="left" balign="left"> + angle() : float </td></tr>
<tr><td align="left" balign="left"> + leftOrth() : Point </td></tr>
<tr><td align="left" balign="left"> + rightOrth() : Point </td></tr>
<tr><td align="left" balign="left"> + subtractWith(other : Point) : Point </td></tr>
<tr><td align="left" balign="left"> + multiplyBy(scale : float) : Point </td></tr>
<tr><td align="left" balign="left"> + length() : float </td></tr>
<tr><td align="left" balign="left"> + normalize() : Point </td></tr>
<tr><td align="left" balign="left"> + makeLeftOrth() : Point </td></tr>
<tr><td align="left" balign="left"> + makeRightOrth() : Point </td></tr>
<tr><td align="left" balign="left"> + dotProduct(other : Point) : float </td></tr>
<tr><td align="left" balign="left"> + pointAt(distance : float, angle : float) : Point </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Point2D
	c70 [label=<<table title="lejos.robotics.geometry.Point2D" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Point2D </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # Point2D() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getX() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getY() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setLocation(x : double, y : double) </font></td></tr>
<tr><td align="left" balign="left"> + setLocation(p : Point2D) </td></tr>
<tr><td align="left" balign="left"> + distanceSq(x1 : double, y1 : double, x2 : double, y2 : double) : double </td></tr>
<tr><td align="left" balign="left"> + distance(x1 : double, y1 : double, x2 : double, y2 : double) : double </td></tr>
<tr><td align="left" balign="left"> + distanceSq(px : double, py : double) : double </td></tr>
<tr><td align="left" balign="left"> + distanceSq(pt : Point2D) : double </td></tr>
<tr><td align="left" balign="left"> + distance(px : double, py : double) : double </td></tr>
<tr><td align="left" balign="left"> + distance(pt : Point2D) : double </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Point2D.Float
	c71 [label=<<table title="lejos.robotics.geometry.Point2D.Float" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + x : float </td></tr>
<tr><td align="left" balign="left"> + y : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Float() </td></tr>
<tr><td align="left" balign="left"> + Float(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + getX() : double </td></tr>
<tr><td align="left" balign="left"> + getY() : double </td></tr>
<tr><td align="left" balign="left"> + setLocation(x : double, y : double) </td></tr>
<tr><td align="left" balign="left"> + setLocation(x : float, y : float) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Point2D.Double
	c72 [label=<<table title="lejos.robotics.geometry.Point2D.Double" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + x : double </td></tr>
<tr><td align="left" balign="left"> + y : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Double() </td></tr>
<tr><td align="left" balign="left"> + Double(x : double, y : double) </td></tr>
<tr><td align="left" balign="left"> + getX() : double </td></tr>
<tr><td align="left" balign="left"> + getY() : double </td></tr>
<tr><td align="left" balign="left"> + setLocation(x : double, y : double) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Rectangle
	c73 [label=<<table title="lejos.robotics.geometry.Rectangle" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Rectangle </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Rectangle(x : float, y : float, w : float, h : float) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Rectangle2D
	c74 [label=<<table title="lejos.robotics.geometry.Rectangle2D" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> Rectangle2D </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + OUT_LEFT : int </td></tr>
<tr><td align="left" balign="left"> + OUT_TOP : int </td></tr>
<tr><td align="left" balign="left"> + OUT_RIGHT : int </td></tr>
<tr><td align="left" balign="left"> + OUT_BOTTOM : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # Rectangle2D() </td></tr>
<tr><td align="left" balign="left"> + contains(x : double, y : double, w : double, h : double) : boolean </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setRect(x : double, y : double, w : double, h : double) </font></td></tr>
<tr><td align="left" balign="left"> + setRect(r : Rectangle2D) </td></tr>
<tr><td align="left" balign="left"> + setFrame(x : double, y : double, w : double, h : double) </td></tr>
<tr><td align="left" balign="left"> + contains(x : double, y : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + intersects(x : double, y : double, w : double, h : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + intersectsLine(x1 : double, y1 : double, x2 : double, y2 : double) : boolean </td></tr>
<tr><td align="left" balign="left"> + outcode(p : Point2D) : int </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + outcode(x : double, y : double) : int </font></td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Rectangle2D.Float
	c75 [label=<<table title="lejos.robotics.geometry.Rectangle2D.Float" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + x : float </td></tr>
<tr><td align="left" balign="left"> + y : float </td></tr>
<tr><td align="left" balign="left"> + width : float </td></tr>
<tr><td align="left" balign="left"> + height : float </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Float() </td></tr>
<tr><td align="left" balign="left"> + Float(x : float, y : float, width : float, height : float) </td></tr>
<tr><td align="left" balign="left"> + getX() : double </td></tr>
<tr><td align="left" balign="left"> + getY() : double </td></tr>
<tr><td align="left" balign="left"> + getWidth() : double </td></tr>
<tr><td align="left" balign="left"> + getHeight() : double </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + getBounds2D() : Rectangle2D </td></tr>
<tr><td align="left" balign="left"> + setRect(x : float, y : float, w : float, h : float) </td></tr>
<tr><td align="left" balign="left"> + setRect(r : Rectangle2D) </td></tr>
<tr><td align="left" balign="left"> + setRect(x : double, y : double, w : double, h : double) </td></tr>
<tr><td align="left" balign="left"> + outcode(x : double, y : double) : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Rectangle2D.Double
	c76 [label=<<table title="lejos.robotics.geometry.Rectangle2D.Double" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + x : double </td></tr>
<tr><td align="left" balign="left"> + y : double </td></tr>
<tr><td align="left" balign="left"> + width : double </td></tr>
<tr><td align="left" balign="left"> + height : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Double() </td></tr>
<tr><td align="left" balign="left"> + Double(x : double, y : double, width : double, height : double) </td></tr>
<tr><td align="left" balign="left"> + getX() : double </td></tr>
<tr><td align="left" balign="left"> + getY() : double </td></tr>
<tr><td align="left" balign="left"> + getWidth() : double </td></tr>
<tr><td align="left" balign="left"> + getHeight() : double </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + setFrame(x : double, y : double, w : double, h : double) </td></tr>
<tr><td align="left" balign="left"> + getBounds2D() : Rectangle2D </td></tr>
<tr><td align="left" balign="left"> + setRect(x : double, y : double, w : double, h : double) </td></tr>
<tr><td align="left" balign="left"> + setRect(r : Rectangle2D) </td></tr>
<tr><td align="left" balign="left"> + outcode(x : double, y : double) : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.RectangleInt32
	c77 [label=<<table title="lejos.robotics.geometry.RectangleInt32" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RectangleInt32 </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + height : int </td></tr>
<tr><td align="left" balign="left"> + width : int </td></tr>
<tr><td align="left" balign="left"> + x : int </td></tr>
<tr><td align="left" balign="left"> + y : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RectangleInt32(x : int, y : int, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + RectangleInt32(width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + RectangleInt32() </td></tr>
<tr><td align="left" balign="left"> + RectangleInt32(p : Point) </td></tr>
<tr><td align="left" balign="left"> + getX() : double </td></tr>
<tr><td align="left" balign="left"> + getY() : double </td></tr>
<tr><td align="left" balign="left"> + getWidth() : double </td></tr>
<tr><td align="left" balign="left"> + getHeight() : double </td></tr>
<tr><td align="left" balign="left"> + setLocation(x : int, y : int) </td></tr>
<tr><td align="left" balign="left"> + setLocation(p : Point) </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(x : int, y : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(p : Point) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(r : RectangleInt32) : boolean </td></tr>
<tr><td align="left" balign="left"> + intersects(r : RectangleInt32) : boolean </td></tr>
<tr><td align="left" balign="left"> + getBounds() : RectangleInt32 </td></tr>
<tr><td align="left" balign="left"> + getBounds2D() : Rectangle2D </td></tr>
<tr><td align="left" balign="left"> + setBounds(x : int, y : int, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + setBounds(r : RectangleInt32) </td></tr>
<tr><td align="left" balign="left"> + setRect(x : double, y : double, width : double, height : double) </td></tr>
<tr><td align="left" balign="left"> + reshape(x : int, y : int, width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> - doubleToInt(x : double, high : boolean) : int </td></tr>
<tr><td align="left" balign="left"> + equals(obj : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getLocation() : Point </td></tr>
<tr><td align="left" balign="left"> + setSize(width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + resize(width : int, height : int) </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + outcode(x : double, y : double) : int </td></tr>
<tr><td align="left" balign="left"> + inside(x : int, y : int) : boolean </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.RectangularShape
	c78 [label=<<table title="lejos.robotics.geometry.RectangularShape" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"><font face="Helvetica-Oblique"> RectangularShape </font></td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RectangularShape() </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getX() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getY() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getWidth() : double </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getHeight() : double </font></td></tr>
<tr><td align="left" balign="left"> + getMinX() : double </td></tr>
<tr><td align="left" balign="left"> + getMinY() : double </td></tr>
<tr><td align="left" balign="left"> + getMaxX() : double </td></tr>
<tr><td align="left" balign="left"> + getMaxY() : double </td></tr>
<tr><td align="left" balign="left"> + getCenterX() : double </td></tr>
<tr><td align="left" balign="left"> + getCenterY() : double </td></tr>
<tr><td align="left" balign="left"> + getFrame() : Rectangle2D </td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + isEmpty() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + setFrame(x : double, y : double, w : double, h : double) </font></td></tr>
<tr><td align="left" balign="left"> + setFrame(r : Rectangle2D) </td></tr>
<tr><td align="left" balign="left"> + contains(p : Point2D) : boolean </td></tr>
<tr><td align="left" balign="left"> + intersects(r : Rectangle2D) : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(r : Rectangle2D) : boolean </td></tr>
<tr><td align="left" balign="left"> + getBounds() : RectangleInt32 </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.geometry.Shape
	c79 [label=<<table title="lejos.robotics.geometry.Shape" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Shape </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getBounds() : RectangleInt32 </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + getBounds2D() : Rectangle2D </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + contains(x : double, y : double) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + contains(p : Point2D) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + intersects(x : double, y : double, w : double, h : double) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + intersects(r : Rectangle2D) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + contains(x : double, y : double, w : double, h : double) : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + contains(r : Rectangle2D) : boolean </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.subsumption.Arbitrator
	c80 [label=<<table title="lejos.robotics.subsumption.Arbitrator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Arbitrator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - NONE : int </td></tr>
<tr><td align="left" balign="left"> - _behavior : Behavior[] </td></tr>
<tr><td align="left" balign="left"> - _highestPriority : int </td></tr>
<tr><td align="left" balign="left"> - _active : int </td></tr>
<tr><td align="left" balign="left"> - _returnWhenInactive : boolean </td></tr>
<tr><td align="left" balign="left"> + keepRunning : boolean </td></tr>
<tr><td align="left" balign="left"> - monitor : Arbitrator.Monitor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Arbitrator(behaviorList : Behavior[], returnWhenInactive : boolean) </td></tr>
<tr><td align="left" balign="left"> + Arbitrator(behaviorList : Behavior[]) </td></tr>
<tr><td align="left" balign="left"> + go() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.subsumption.Arbitrator.Monitor
	c81 [label=<<table title="lejos.robotics.subsumption.Arbitrator.Monitor" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Monitor </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ more : boolean </td></tr>
<tr><td align="left" balign="left"> ~ maxPriority : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - Monitor() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.robotics.subsumption.Behavior
	c82 [label=<<table title="lejos.robotics.subsumption.Behavior" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Behavior </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + takeControl() : boolean </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + action() </font></td></tr>
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + suppress() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.Delay
	c83 [label=<<table title="lejos.utility.Delay" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Delay </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Delay() </td></tr>
<tr><td align="left" balign="left"> + msDelay(period : long) </td></tr>
<tr><td align="left" balign="left"> + usDelay(period : long) </td></tr>
<tr><td align="left" balign="left"> + nsDelay(period : long) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.EndianTools
	c84 [label=<<table title="lejos.utility.EndianTools" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> EndianTools </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + EndianTools() </td></tr>
<tr><td align="left" balign="left"> + decodeLongBE(b : byte[], off : int) : long </td></tr>
<tr><td align="left" balign="left"> + decodeUIntBE(b : byte[], off : int) : long </td></tr>
<tr><td align="left" balign="left"> + decodeUShortBE(b : byte[], off : int) : int </td></tr>
<tr><td align="left" balign="left"> + decodeIntBE(b : byte[], off : int) : int </td></tr>
<tr><td align="left" balign="left"> + decodeShortBE(b : byte[], off : int) : short </td></tr>
<tr><td align="left" balign="left"> + decodeLongLE(b : byte[], off : int) : long </td></tr>
<tr><td align="left" balign="left"> + decodeUIntLE(b : byte[], off : int) : long </td></tr>
<tr><td align="left" balign="left"> + decodeUShortLE(b : byte[], off : int) : int </td></tr>
<tr><td align="left" balign="left"> + decodeIntLE(b : byte[], off : int) : int </td></tr>
<tr><td align="left" balign="left"> + decodeShortLE(b : byte[], off : int) : short </td></tr>
<tr><td align="left" balign="left"> + encodeLongBE(v : long, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeIntBE(v : int, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeShortBE(v : int, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeLongLE(v : long, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeIntLE(v : int, b : byte[], off : int) </td></tr>
<tr><td align="left" balign="left"> + encodeShortLE(v : int, b : byte[], off : int) </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.GyroDirectionFinder
	c85 [label=<<table title="lejos.utility.GyroDirectionFinder" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> GyroDirectionFinder </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - cartesianCalibrate : float </td></tr>
<tr><td align="left" balign="left"> - heading : float </td></tr>
<tr><td align="left" balign="left"> - acceleration : float </td></tr>
<tr><td align="left" balign="left"> - calibrating : boolean </td></tr>
<tr><td align="left" balign="left"> - reg : GyroDirectionFinder.Regulator </td></tr>
<tr><td align="left" balign="left"> - gyro : Gyroscope </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + GyroDirectionFinder(gyro : Gyroscope) </td></tr>
<tr><td align="left" balign="left"> + GyroDirectionFinder(gyro : Gyroscope, calibrate : boolean) </td></tr>
<tr><td align="left" balign="left"> + setDegrees(heading : float) </td></tr>
<tr><td align="left" balign="left"> + getDegrees() : float </td></tr>
<tr><td align="left" balign="left"> + getAngularVelocity() : float </td></tr>
<tr><td align="left" balign="left"> + getAngularAcceleration() : float </td></tr>
<tr><td align="left" balign="left"> + getDegreesCartesian() : float </td></tr>
<tr><td align="left" balign="left"> + setDegreesCartesian(heading : float) </td></tr>
<tr><td align="left" balign="left"> + resetCartesianZero() </td></tr>
<tr><td align="left" balign="left"> + startCalibration() </td></tr>
<tr><td align="left" balign="left"> + stopCalibration() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.GyroDirectionFinder.Regulator
	c86 [label=<<table title="lejos.utility.GyroDirectionFinder.Regulator" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Regulator </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> # Regulator() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.Integration
	c87 [label=<<table title="lejos.utility.Integration" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Integration </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - lastReadingMillis : long </td></tr>
<tr><td align="left" balign="left"> - lastReading : double </td></tr>
<tr><td align="left" balign="left"> - integral : double </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Integration(initialValue : double, reading : double) </td></tr>
<tr><td align="left" balign="left"> + addReading(reading : double) : double </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.KalmanFilter
	c88 [label=<<table title="lejos.utility.KalmanFilter" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> KalmanFilter </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - a : Matrix </td></tr>
<tr><td align="left" balign="left"> - b : Matrix </td></tr>
<tr><td align="left" balign="left"> - c : Matrix </td></tr>
<tr><td align="left" balign="left"> - i : Matrix </td></tr>
<tr><td align="left" balign="left"> - q : Matrix </td></tr>
<tr><td align="left" balign="left"> - r : Matrix </td></tr>
<tr><td align="left" balign="left"> - at : Matrix </td></tr>
<tr><td align="left" balign="left"> - ct : Matrix </td></tr>
<tr><td align="left" balign="left"> - mu : Matrix </td></tr>
<tr><td align="left" balign="left"> - sigma : Matrix </td></tr>
<tr><td align="left" balign="left"> - muBar : Matrix </td></tr>
<tr><td align="left" balign="left"> - sigmaBar : Matrix </td></tr>
<tr><td align="left" balign="left"> - gain : Matrix </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + KalmanFilter(a : Matrix, b : Matrix, c : Matrix, q : Matrix, r : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setState(mean : Matrix, covariance : Matrix) </td></tr>
<tr><td align="left" balign="left"> + update(control : Matrix, measurement : Matrix) </td></tr>
<tr><td align="left" balign="left"> + getMean() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getCovariance() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getPredictedMean() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getPredictedCovariance() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getGain() : Matrix </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.LUDecomposition
	c89 [label=<<table title="lejos.utility.LUDecomposition" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> LUDecomposition </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - LU : double[][] </td></tr>
<tr><td align="left" balign="left"> - m : int </td></tr>
<tr><td align="left" balign="left"> - n : int </td></tr>
<tr><td align="left" balign="left"> - pivsign : int </td></tr>
<tr><td align="left" balign="left"> - piv : int[] </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + LUDecomposition(A : Matrix) </td></tr>
<tr><td align="left" balign="left"> + isNonsingular() : boolean </td></tr>
<tr><td align="left" balign="left"> + getL() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getU() : Matrix </td></tr>
<tr><td align="left" balign="left"> + getPivot() : int[] </td></tr>
<tr><td align="left" balign="left"> + getDoublePivot() : double[] </td></tr>
<tr><td align="left" balign="left"> + det() : double </td></tr>
<tr><td align="left" balign="left"> + solve(B : Matrix) : Matrix </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.Matrix
	c90 [label=<<table title="lejos.utility.Matrix" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Matrix </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - A : double[][] </td></tr>
<tr><td align="left" balign="left"> - m : int </td></tr>
<tr><td align="left" balign="left"> - n : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Matrix(m : int, n : int) </td></tr>
<tr><td align="left" balign="left"> + Matrix(m : int, n : int, s : double) </td></tr>
<tr><td align="left" balign="left"> + Matrix(A : double[][]) </td></tr>
<tr><td align="left" balign="left"> + Matrix(A : double[][], m : int, n : int) </td></tr>
<tr><td align="left" balign="left"> + Matrix(vals : double[], m : int) </td></tr>
<tr><td align="left" balign="left"> + constructWithCopy(A : double[][]) : Matrix </td></tr>
<tr><td align="left" balign="left"> + copy() : Matrix </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + getArray() : double[][] </td></tr>
<tr><td align="left" balign="left"> + getArrayCopy() : double[][] </td></tr>
<tr><td align="left" balign="left"> + getColumnPackedCopy() : double[] </td></tr>
<tr><td align="left" balign="left"> + getRowPackedCopy() : double[] </td></tr>
<tr><td align="left" balign="left"> + getRowDimension() : int </td></tr>
<tr><td align="left" balign="left"> + getColumnDimension() : int </td></tr>
<tr><td align="left" balign="left"> + get(i : int, j : int) : double </td></tr>
<tr><td align="left" balign="left"> + getMatrix(i0 : int, i1 : int, j0 : int, j1 : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + getMatrix(r : int[], c : int[]) : Matrix </td></tr>
<tr><td align="left" balign="left"> + getMatrix(i0 : int, i1 : int, c : int[]) : Matrix </td></tr>
<tr><td align="left" balign="left"> + getMatrix(r : int[], j0 : int, j1 : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + set(i : int, j : int, s : double) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(i0 : int, i1 : int, j0 : int, j1 : int, X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(r : int[], c : int[], X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(r : int[], j0 : int, j1 : int, X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + setMatrix(i0 : int, i1 : int, c : int[], X : Matrix) </td></tr>
<tr><td align="left" balign="left"> + transpose() : Matrix </td></tr>
<tr><td align="left" balign="left"> + norm1() : double </td></tr>
<tr><td align="left" balign="left"> + normInf() : double </td></tr>
<tr><td align="left" balign="left"> + normF() : double </td></tr>
<tr><td align="left" balign="left"> + uminus() : Matrix </td></tr>
<tr><td align="left" balign="left"> + plus(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + plusEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + minus(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + minusEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayTimes(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayTimesEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayRightDivide(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayRightDivideEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayLeftDivide(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + arrayLeftDivideEquals(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + times(s : double) : Matrix </td></tr>
<tr><td align="left" balign="left"> + timesEquals(s : double) : Matrix </td></tr>
<tr><td align="left" balign="left"> + times(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + trace() : double </td></tr>
<tr><td align="left" balign="left"> + random(m : int, n : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + identity(m : int, n : int) : Matrix </td></tr>
<tr><td align="left" balign="left"> + inverse() : Matrix </td></tr>
<tr><td align="left" balign="left"> + solve(B : Matrix) : Matrix </td></tr>
<tr><td align="left" balign="left"> + print(out : PrintStream) </td></tr>
<tr><td align="left" balign="left"> - checkMatrixDimensions(B : Matrix) </td></tr>
<tr><td align="left" balign="left"> - hypot(a : double, b : double) : double </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.Stopwatch
	c91 [label=<<table title="lejos.utility.Stopwatch" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Stopwatch </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - t0 : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Stopwatch() </td></tr>
<tr><td align="left" balign="left"> + reset() </td></tr>
<tr><td align="left" balign="left"> + elapsed() : int </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.Timer
	c92 [label=<<table title="lejos.utility.Timer" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Timer </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - myListener : TimerListener </td></tr>
<tr><td align="left" balign="left"> - myThread : Thread </td></tr>
<tr><td align="left" balign="left"> - delay : int </td></tr>
<tr><td align="left" balign="left"> - running : boolean </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Timer(theDelay : int, el : TimerListener) </td></tr>
<tr><td align="left" balign="left"> + getDelay() : int </td></tr>
<tr><td align="left" balign="left"> + setDelay(newDelay : int) </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// lejos.utility.TimerListener
	c93 [label=<<table title="lejos.utility.TimerListener" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> TimerListener </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left">  </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"><font face="Helvetica-Oblique" point-size="10.0"> + timedOut() </font></td></tr>
		</table></td></tr>
		</table>>, URL="null", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	//lejos.hardware.Audio implements lejos.hardware.Sounds
	c6:p -> c0:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.hardware.lcd.GraphicsLCD implements lejos.hardware.lcd.CommonLCD
	c7:p -> c8:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.hardware.lcd.TextLCD implements lejos.hardware.lcd.CommonLCD
	c7:p -> c9:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.internals.EV3DevPort implements lejos.hardware.port.Port
	c11:p -> c14:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.AccelerometerAdapter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c16:p [dir=back,arrowtail=empty];
	//lejos.robotics.AccelerometerAdapter implements lejos.robotics.Accelerometer
	c15:p -> c16:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.DCMotor implements lejos.robotics.BaseMotor
	c17:p -> c21:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.DirectionFinder implements lejos.robotics.Calibrate
	c18:p -> c22:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.DirectionFinderAdapter implements lejos.robotics.DirectionFinder
	c22:p -> c23:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.RangeFinderAdapter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c30:p [dir=back,arrowtail=empty];
	//lejos.robotics.RangeFinderAdapter implements lejos.robotics.RangeFinder
	c29:p -> c30:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.RangeReadings extends java.util.ArrayList<lejos.robotics.RangeReading>
	c94:p -> c32:p [dir=back,arrowtail=empty];
	//lejos.robotics.RangeReadings implements lejos.robotics.Transmittable
	c39:p -> c32:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.RegulatedMotor implements lejos.robotics.BaseMotor
	c17:p -> c34:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.RegulatedMotor implements lejos.robotics.EV3DevBaseMotor
	c24:p -> c34:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.RegulatedMotor implements lejos.robotics.Tachometer
	c37:p -> c34:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.Tachometer implements lejos.robotics.Encoder
	c25:p -> c37:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.AbstractCalibrationFilter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c40:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.AbstractCalibrationFilter implements lejos.robotics.Calibrate
	c18:p -> c40:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.AbstractCalibrationFilter.CalibrationFileException extends java.lang.RuntimeException
	c95:p -> c41:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.AbstractFilter implements lejos.robotics.SampleProvider
	c36:p -> c42:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.ConcatenationFilter implements lejos.robotics.SampleProvider
	c36:p -> c43:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.IntegrationFilter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c45:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.LinearCalibrationFilter extends lejos.robotics.filter.AbstractCalibrationFilter
	c40:p -> c46:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.LowPassFilter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c47:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.MaximumFilter extends lejos.robotics.filter.SampleBuffer
	c56:p -> c48:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.MeanFilter extends lejos.robotics.filter.SumFilter
	c61:p -> c49:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.MedianFilter extends lejos.robotics.filter.SampleBuffer
	c56:p -> c50:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.MinimumFilter extends lejos.robotics.filter.SampleBuffer
	c56:p -> c51:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.ModulusFilter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c52:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.OffsetCorrectionFilter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c53:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.PublishedSource.Listener extends java.lang.Thread
	c96:p -> c55:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SampleBuffer extends lejos.robotics.filter.AbstractFilter
	c42:p -> c56:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SampleThread extends lejos.robotics.filter.AbstractFilter
	c42:p -> c57:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SampleThread.Runner extends java.lang.Thread
	c96:p -> c58:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SliceFilter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c59:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SubscribedProvider implements lejos.robotics.SampleProvider
	c36:p -> c60:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.filter.SumFilter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c61:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SumFilter.PlainSum extends lejos.robotics.filter.SampleBuffer
	c56:p -> c62:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.SumFilter.SmartSum extends lejos.robotics.filter.SampleBuffer
	c56:p -> c63:p [dir=back,arrowtail=empty];
	//lejos.robotics.filter.ZeroFilter extends lejos.robotics.filter.AbstractFilter
	c42:p -> c64:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Line extends lejos.robotics.geometry.Line2D.Float
	c67:p -> c65:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Line2D implements lejos.robotics.geometry.Shape
	c79:p -> c66:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.geometry.Line2D implements java.lang.Cloneable
	c97:p -> c66:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.geometry.Line2D.Float extends lejos.robotics.geometry.Line2D
	c66:p -> c67:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Line2D.Double extends lejos.robotics.geometry.Line2D
	c66:p -> c68:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Point extends lejos.robotics.geometry.Point2D.Float
	c71:p -> c69:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Point2D implements java.lang.Cloneable
	c97:p -> c70:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.geometry.Point2D.Float extends lejos.robotics.geometry.Point2D
	c70:p -> c71:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Point2D.Double extends lejos.robotics.geometry.Point2D
	c70:p -> c72:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Rectangle extends lejos.robotics.geometry.Rectangle2D.Float
	c75:p -> c73:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Rectangle2D extends lejos.robotics.geometry.RectangularShape
	c78:p -> c74:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Rectangle2D.Float extends lejos.robotics.geometry.Rectangle2D
	c74:p -> c75:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.Rectangle2D.Double extends lejos.robotics.geometry.Rectangle2D
	c74:p -> c76:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.RectangleInt32 extends lejos.robotics.geometry.Rectangle2D
	c74:p -> c77:p [dir=back,arrowtail=empty];
	//lejos.robotics.geometry.RectangularShape implements lejos.robotics.geometry.Shape
	c79:p -> c78:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.geometry.RectangularShape implements java.lang.Cloneable
	c97:p -> c78:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.robotics.subsumption.Arbitrator.Monitor extends java.lang.Thread
	c96:p -> c81:p [dir=back,arrowtail=empty];
	//lejos.utility.GyroDirectionFinder implements lejos.robotics.DirectionFinder
	c22:p -> c85:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.utility.GyroDirectionFinder.Regulator extends java.lang.Thread
	c96:p -> c86:p [dir=back,arrowtail=empty];
	//lejos.utility.LUDecomposition implements java.io.Serializable
	c98:p -> c89:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.utility.Matrix implements java.lang.Cloneable
	c97:p -> c90:p [dir=back,arrowtail=empty,style=dashed];
	//lejos.utility.Matrix implements java.io.Serializable
	c98:p -> c90:p [dir=back,arrowtail=empty,style=dashed];
	// java.lang.Thread
	c96 [label=<<table title="java.lang.Thread" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Thread.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> Thread </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - name : String </td></tr>
<tr><td align="left" balign="left"> - priority : int </td></tr>
<tr><td align="left" balign="left"> - threadQ : Thread </td></tr>
<tr><td align="left" balign="left"> - eetop : long </td></tr>
<tr><td align="left" balign="left"> - single_step : boolean </td></tr>
<tr><td align="left" balign="left"> - daemon : boolean </td></tr>
<tr><td align="left" balign="left"> - stillborn : boolean </td></tr>
<tr><td align="left" balign="left"> - target : Runnable </td></tr>
<tr><td align="left" balign="left"> - group : ThreadGroup </td></tr>
<tr><td align="left" balign="left"> - contextClassLoader : ClassLoader </td></tr>
<tr><td align="left" balign="left"> - inheritedAccessControlContext : AccessControlContext </td></tr>
<tr><td align="left" balign="left"> - threadInitNumber : int </td></tr>
<tr><td align="left" balign="left"> ~ threadLocals : ThreadLocal.ThreadLocalMap </td></tr>
<tr><td align="left" balign="left"> ~ inheritableThreadLocals : ThreadLocal.ThreadLocalMap </td></tr>
<tr><td align="left" balign="left"> - stackSize : long </td></tr>
<tr><td align="left" balign="left"> - nativeParkEventPointer : long </td></tr>
<tr><td align="left" balign="left"> - tid : long </td></tr>
<tr><td align="left" balign="left"> - threadSeqNumber : long </td></tr>
<tr><td align="left" balign="left"> - threadStatus : int </td></tr>
<tr><td align="left" balign="left"> ~ parkBlocker : Object </td></tr>
<tr><td align="left" balign="left"> - blocker : Interruptible </td></tr>
<tr><td align="left" balign="left"> - blockerLock : Object </td></tr>
<tr><td align="left" balign="left"> + MIN_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> + NORM_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> + MAX_PRIORITY : int </td></tr>
<tr><td align="left" balign="left"> - EMPTY_STACK_TRACE : StackTraceElement[] </td></tr>
<tr><td align="left" balign="left"> - SUBCLASS_IMPLEMENTATION_PERMISSION : RuntimePermission </td></tr>
<tr><td align="left" balign="left"> - uncaughtExceptionHandler : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> - defaultUncaughtExceptionHandler : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomSeed : long </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomProbe : int </td></tr>
<tr><td align="left" balign="left"> ~ threadLocalRandomSecondarySeed : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + Thread() </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : Runnable) </td></tr>
<tr><td align="left" balign="left"> ~ Thread(arg0 : Runnable, arg1 : AccessControlContext) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : Runnable, arg1 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long) </td></tr>
<tr><td align="left" balign="left"> + Thread(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long, arg4 : boolean) </td></tr>
<tr><td align="left" balign="left"> - registerNatives() </td></tr>
<tr><td align="left" balign="left"> - nextThreadNum() : int </td></tr>
<tr><td align="left" balign="left"> - nextThreadID() : long </td></tr>
<tr><td align="left" balign="left"> ~ blockedOn(arg0 : Interruptible) </td></tr>
<tr><td align="left" balign="left"> + currentThread() : Thread </td></tr>
<tr><td align="left" balign="left"> + yield() </td></tr>
<tr><td align="left" balign="left"> + sleep(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + sleep(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + onSpinWait() </td></tr>
<tr><td align="left" balign="left"> - init(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long) </td></tr>
<tr><td align="left" balign="left"> - init(arg0 : ThreadGroup, arg1 : Runnable, arg2 : String, arg3 : long, arg4 : AccessControlContext, arg5 : boolean) </td></tr>
<tr><td align="left" balign="left"> # clone() : Object </td></tr>
<tr><td align="left" balign="left"> + start() </td></tr>
<tr><td align="left" balign="left"> - start0() </td></tr>
<tr><td align="left" balign="left"> + run() </td></tr>
<tr><td align="left" balign="left"> - exit() </td></tr>
<tr><td align="left" balign="left"> + stop() </td></tr>
<tr><td align="left" balign="left"> + stop(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + interrupt() </td></tr>
<tr><td align="left" balign="left"> + interrupted() : boolean </td></tr>
<tr><td align="left" balign="left"> + isInterrupted() : boolean </td></tr>
<tr><td align="left" balign="left"> - isInterrupted(arg0 : boolean) : boolean </td></tr>
<tr><td align="left" balign="left"> + destroy() </td></tr>
<tr><td align="left" balign="left"> + isAlive() : boolean </td></tr>
<tr><td align="left" balign="left"> + suspend() </td></tr>
<tr><td align="left" balign="left"> + resume() </td></tr>
<tr><td align="left" balign="left"> + setPriority(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + getPriority() : int </td></tr>
<tr><td align="left" balign="left"> + setName(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + getName() : String </td></tr>
<tr><td align="left" balign="left"> + getThreadGroup() : ThreadGroup </td></tr>
<tr><td align="left" balign="left"> + activeCount() : int </td></tr>
<tr><td align="left" balign="left"> + enumerate(arg0 : Thread[]) : int </td></tr>
<tr><td align="left" balign="left"> + countStackFrames() : int </td></tr>
<tr><td align="left" balign="left"> + join(arg0 : long) </td></tr>
<tr><td align="left" balign="left"> + join(arg0 : long, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> + join() </td></tr>
<tr><td align="left" balign="left"> + dumpStack() </td></tr>
<tr><td align="left" balign="left"> + setDaemon(arg0 : boolean) </td></tr>
<tr><td align="left" balign="left"> + isDaemon() : boolean </td></tr>
<tr><td align="left" balign="left"> + checkAccess() </td></tr>
<tr><td align="left" balign="left"> + toString() : String </td></tr>
<tr><td align="left" balign="left"> + getContextClassLoader() : ClassLoader </td></tr>
<tr><td align="left" balign="left"> + setContextClassLoader(arg0 : ClassLoader) </td></tr>
<tr><td align="left" balign="left"> + holdsLock(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + getStackTrace() : StackTraceElement[] </td></tr>
<tr><td align="left" balign="left"> + getAllStackTraces() : Map&lt;Thread, StackTraceElement&gt; </td></tr>
<tr><td align="left" balign="left"> - isCCLOverridden(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - auditSubclass(arg0 : Class&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> - dumpThreads(arg0 : Thread[]) : StackTraceElement[][] </td></tr>
<tr><td align="left" balign="left"> - getThreads() : Thread[] </td></tr>
<tr><td align="left" balign="left"> + getId() : long </td></tr>
<tr><td align="left" balign="left"> + getState() : Thread.State </td></tr>
<tr><td align="left" balign="left"> + setDefaultUncaughtExceptionHandler(arg0 : Thread.UncaughtExceptionHandler) </td></tr>
<tr><td align="left" balign="left"> + getDefaultUncaughtExceptionHandler() : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> + getUncaughtExceptionHandler() : Thread.UncaughtExceptionHandler </td></tr>
<tr><td align="left" balign="left"> + setUncaughtExceptionHandler(arg0 : Thread.UncaughtExceptionHandler) </td></tr>
<tr><td align="left" balign="left"> - dispatchUncaughtException(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> ~ processQueue(arg0 : ReferenceQueue&lt;Class&lt;?&gt;&gt;, arg1 : ConcurrentMap&lt;?, ?&gt;) </td></tr>
<tr><td align="left" balign="left"> - setPriority0(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - stop0(arg0 : Object) </td></tr>
<tr><td align="left" balign="left"> - suspend0() </td></tr>
<tr><td align="left" balign="left"> - resume0() </td></tr>
<tr><td align="left" balign="left"> - interrupt0() </td></tr>
<tr><td align="left" balign="left"> - setNativeName(arg0 : String) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Thread.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.io.Serializable
	c98 [label=<<table title="java.io.Serializable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/io/Serializable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Serializable </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/io/Serializable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.util.ArrayList<E>
	c94 [label=<<table title="java.util.ArrayList" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/util/ArrayList.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> ArrayList&lt;E&gt; </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> - serialVersionUID : long </td></tr>
<tr><td align="left" balign="left"> - DEFAULT_CAPACITY : int </td></tr>
<tr><td align="left" balign="left"> - EMPTY_ELEMENTDATA : Object[] </td></tr>
<tr><td align="left" balign="left"> - DEFAULTCAPACITY_EMPTY_ELEMENTDATA : Object[] </td></tr>
<tr><td align="left" balign="left"> ~ elementData : Object[] </td></tr>
<tr><td align="left" balign="left"> - size : int </td></tr>
<tr><td align="left" balign="left"> - MAX_ARRAY_SIZE : int </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + ArrayList(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + ArrayList() </td></tr>
<tr><td align="left" balign="left"> + ArrayList(arg0 : Collection&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + trimToSize() </td></tr>
<tr><td align="left" balign="left"> + ensureCapacity(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - grow(arg0 : int) : Object[] </td></tr>
<tr><td align="left" balign="left"> - grow() : Object[] </td></tr>
<tr><td align="left" balign="left"> - newCapacity(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> - hugeCapacity(arg0 : int) : int </td></tr>
<tr><td align="left" balign="left"> + size() : int </td></tr>
<tr><td align="left" balign="left"> + isEmpty() : boolean </td></tr>
<tr><td align="left" balign="left"> + contains(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> + indexOf(arg0 : Object) : int </td></tr>
<tr><td align="left" balign="left"> + lastIndexOf(arg0 : Object) : int </td></tr>
<tr><td align="left" balign="left"> + clone() : Object </td></tr>
<tr><td align="left" balign="left"> + toArray() : Object[] </td></tr>
<tr><td align="left" balign="left"> + toArray(arg0 : T[]) : T[] </td></tr>
<tr><td align="left" balign="left"> ~ elementData(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> ~ elementAt(arg0 : Object[], arg1 : int) : E </td></tr>
<tr><td align="left" balign="left"> + get(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + set(arg0 : int, arg1 : E) : E </td></tr>
<tr><td align="left" balign="left"> - add(arg0 : E, arg1 : Object[], arg2 : int) </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : E) : boolean </td></tr>
<tr><td align="left" balign="left"> + add(arg0 : int, arg1 : E) </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : int) : E </td></tr>
<tr><td align="left" balign="left"> + remove(arg0 : Object) : boolean </td></tr>
<tr><td align="left" balign="left"> - fastRemove(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> + clear() </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + addAll(arg0 : int, arg1 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> # removeRange(arg0 : int, arg1 : int) </td></tr>
<tr><td align="left" balign="left"> - shiftTailOverGap(arg0 : Object[], arg1 : int, arg2 : int) </td></tr>
<tr><td align="left" balign="left"> - rangeCheckForAdd(arg0 : int) </td></tr>
<tr><td align="left" balign="left"> - outOfBoundsMsg(arg0 : int) : String </td></tr>
<tr><td align="left" balign="left"> - outOfBoundsMsg(arg0 : int, arg1 : int) : String </td></tr>
<tr><td align="left" balign="left"> + removeAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> + retainAll(arg0 : Collection&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ batchRemove(arg0 : Collection&lt;?&gt;, arg1 : boolean, arg2 : int, arg3 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> - writeObject(arg0 : ObjectOutputStream) </td></tr>
<tr><td align="left" balign="left"> - readObject(arg0 : ObjectInputStream) </td></tr>
<tr><td align="left" balign="left"> + listIterator(arg0 : int) : ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + listIterator() : ListIterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + iterator() : Iterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + subList(arg0 : int, arg1 : int) : List&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> + forEach(arg0 : Consumer&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> + spliterator() : Spliterator&lt;E&gt; </td></tr>
<tr><td align="left" balign="left"> - nBits(arg0 : int) : long[] </td></tr>
<tr><td align="left" balign="left"> - setBit(arg0 : long[], arg1 : int) </td></tr>
<tr><td align="left" balign="left"> - isClear(arg0 : long[], arg1 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + removeIf(arg0 : Predicate&lt;?&gt;) : boolean </td></tr>
<tr><td align="left" balign="left"> ~ removeIf(arg0 : Predicate&lt;?&gt;, arg1 : int, arg2 : int) : boolean </td></tr>
<tr><td align="left" balign="left"> + replaceAll(arg0 : UnaryOperator&lt;E&gt;) </td></tr>
<tr><td align="left" balign="left"> + sort(arg0 : Comparator&lt;?&gt;) </td></tr>
<tr><td align="left" balign="left"> ~ checkInvariants() </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/util/ArrayList.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.RuntimeException
	c95 [label=<<table title="java.lang.RuntimeException" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/RuntimeException.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> RuntimeException </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> ~ serialVersionUID : long </td></tr>
		</table></td></tr>
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="left" balign="left"> + RuntimeException() </td></tr>
<tr><td align="left" balign="left"> + RuntimeException(arg0 : String) </td></tr>
<tr><td align="left" balign="left"> + RuntimeException(arg0 : String, arg1 : Throwable) </td></tr>
<tr><td align="left" balign="left"> + RuntimeException(arg0 : Throwable) </td></tr>
<tr><td align="left" balign="left"> # RuntimeException(arg0 : String, arg1 : Throwable, arg2 : boolean, arg3 : boolean) </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/RuntimeException.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
	// java.lang.Cloneable
	c97 [label=<<table title="java.lang.Cloneable" border="0" cellborder="1" cellspacing="0" cellpadding="2" port="p" href="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Cloneable.html">
		<tr><td><table border="0" cellspacing="0" cellpadding="1">
<tr><td align="center" balign="center"> &#171;interface&#187; </td></tr>
<tr><td align="center" balign="center"> Cloneable </td></tr>
		</table></td></tr>
		</table>>, URL="http://java.sun.com/j2se/1.4.2/docs/api/java/lang/Cloneable.html", fontname="Helvetica", fontcolor="black", fontsize=10.0];
}

